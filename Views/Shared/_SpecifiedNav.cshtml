<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - CPCPA</title>
    <meta http-equiv="Cache-Control" content="no-cache, no-store, must-revalidate" />
    <meta http-equiv="Pragma" content="no-cache" />
    <meta http-equiv="Expires" content="0" />

    <!-- Bootstrap & Custom Styles -->
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons/font/bootstrap-icons.css">
    <link rel="stylesheet" href="~/css/darkmode.css" asp-append-version="true" />

    <style>
        /* Custom Styling */
        .navbar-brand img {
            width: 50px;
            /* Wider */
            height: auto;
            filter: invert(1);
            /* Makes the image white */
        }

        .navbar-nav .nav-link {
            font-weight: 500;
            padding: 0.75rem;
        }

        .dropdown-menu {
            min-width: 200px;
        }

        .footer {
            background: #f8f9fa;
            font-size: 14px;
        }

        /* Dropdown menu: make all text and icons black */
        .dropdown-menu,
        .dropdown-menu .dropdown-item,
        .dropdown-menu .dropdown-item i {
            color: #000 !important;
        }

            .dropdown-menu .dropdown-item.active,
            .dropdown-menu .dropdown-item:active {
                background-color: #e9ecef !important;
                color: #000 !important;
            }

            .dropdown-menu .dropdown-item:hover,
            .dropdown-menu .dropdown-item:focus {
                color: #000 !important;
                background-color: #f1f1f1 !important;
            }
    </style>
</head>

<body> 
    <!-- Main Content -->
    <div class="container-fluid py-4">
        <main role="main" class="pb-3">
            @RenderBody()
        </main>
    </div>

 

    <!-- JavaScript -->
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/7.0.5/signalr.min.js"></script>
    <script>
        const connection = new signalR.HubConnectionBuilder()
            .withUrl("/notificationHub")
            .build();

        // Only enable real-time update logic if not on the login page
        if (window.location.pathname.toLowerCase() !== "/account/login") {
            connection.on("ReceiveUpdate", function (message) {
                // Show notification banner if it exists, otherwise reload
                var banner = document.getElementById("realtime-notification");
                if (banner) {
                    banner.style.display = "block";
                } else {
                    location.reload();
                }
            });
        }

        connection.start().catch(function (err) {
            return console.error(err.toString());
        });
    </script>
    <script>
        // Dark mode logic
        function setDarkMode(enabled) {
            if (enabled) {
                document.body.classList.add('dark-mode');
                document.getElementById('darkModeIcon').textContent = '☀️';
            } else {
                document.body.classList.remove('dark-mode');
                document.getElementById('darkModeIcon').textContent = '🌙';
            }
        }
        // On page load, check localStorage or system preference
        const prefersDark = window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches;
        const userDark = localStorage.getItem('darkMode');
        setDarkMode(userDark === 'enabled' || (!userDark && prefersDark));
        document.getElementById('toggleDarkMode').addEventListener('click', function () {
            const enabled = !document.body.classList.contains('dark-mode');
            setDarkMode(enabled);
            localStorage.setItem('darkMode', enabled ? 'enabled' : 'disabled');
        });
    </script>
    @await RenderSectionAsync("Scripts", required: false)

</body>

</html>
