@model IEnumerable<TestingDemo.Models.ViewModels.RecurringExpenseViewModel>
@{
    ViewData["Title"] = "Recurring Expenses";
    var statusColors = new Dictionary<string, string> {
{"Paid", "success"},
{"Pending", "warning"},
{"Overdue", "danger"},
{"Postponed", "secondary"}
};
}

<div class="container-fluid py-4">
    <!-- Success/Error Messages -->
    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            <i class="bi bi-check-circle"></i> @TempData["SuccessMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
            @if (TempData["UndoMarkAsPaid"] != null)
            {
                var undo = (string)TempData["UndoMarkAsPaid"];
                var undoData = undo.Split(',');
                <form asp-action="UndoMarkAsPaid" method="post" class="d-inline ms-3">
                    <input type="hidden" name="id" value="@undoData[0]" />
                    <input type="hidden" name="year" value="@undoData[1]" />
                    <input type="hidden" name="month" value="@undoData[2]" />
                    <button type="submit" class="btn btn-sm btn-warning">Undo</button>
                </form>
            }
        </div>
    }
    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            <i class="bi bi-exclamation-triangle"></i> @TempData["ErrorMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
    }

    <!-- Header Section -->
    <div class="row mb-4">
        <div class="col-12">
            <div
                class="d-flex flex-column flex-md-row justify-content-between align-items-start align-items-md-center gap-3">
                <div>
                    <h1 class="h2 mb-0"><i class="bi bi-arrow-repeat"></i> Recurring Expenses</h1>
                    <p class="text-muted mb-0">Manage your recurring expenses efficiently</p>
                </div>
                <div class="d-flex flex-column flex-sm-row gap-2">
                    <a asp-action="Calendar" class="btn btn-outline-primary">
                        <i class="bi bi-calendar-event"></i> Calendar View
                    </a>

                    <a asp-controller="Expense" asp-action="Index" class="btn btn-outline-primary">
                        <i class="bi bi-list-ul"></i>
                        <span class="d-none d-sm-inline">All Expenses</span>
                        <span class="d-inline d-sm-none">All</span>
                    </a>
                    <a asp-action="Create" class="btn btn-primary">
                        <i class="bi bi-plus-circle"></i>
                        <span class="d-none d-sm-inline">Add Recurring</span>
                        <span class="d-inline d-sm-none">Add</span>
                    </a>
                </div>
            </div>
        </div>
    </div>

    <!-- Filters Section -->
    <div class="row mb-4">
        <div class="col-12">
            <div class="card shadow-sm">
                <div class="card-body">
                    <form method="get" class="row g-3">
                        <div class="col-12 col-sm-6 col-md-4 col-lg-3">
                            <label for="month" class="form-label">Month</label>
                            <input type="month" id="month" name="month" class="form-control"
                                value="@ViewBag.SelectedMonth" />
                        </div>
                        <div class="col-12 col-sm-6 col-md-4 col-lg-3">
                            <label for="status" class="form-label">Status</label>
                            <select id="status" name="status" class="form-select">
                                @{
                                    var statuses = new[] { "All", "Paid", "Pending", "Overdue", "Postponed" };
                                    foreach (var status in statuses)
                                    {
                                        if ((string)ViewBag.SelectedStatus == status)
                                        {
                                            <option value="@status" selected>@status</option>
                                        }
                                        else
                                        {
                                            <option value="@status">@status</option>
                                        }
                                    }
                                }
                            </select>
                        </div>
                        <div class="col-12 col-sm-6 col-md-4 col-lg-3 d-flex align-items-end">
                            <button type="submit" class="btn btn-outline-secondary w-100">
                                <i class="bi bi-funnel"></i>
                                <span class="d-none d-sm-inline">Filter</span>
                                <span class="d-inline d-sm-none">Apply</span>
                            </button>
                        </div>
                        <div class="col-12 col-sm-6 col-md-4 col-lg-3 d-flex align-items-end">
                            <a asp-action="Index" class="btn btn-outline-info w-100">
                                <i class="bi bi-arrow-clockwise"></i>
                                <span class="d-none d-sm-inline">Clear Filters</span>
                                <span class="d-inline d-sm-none">Clear</span>
                            </a>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <!-- Statistics Dropdown -->
    <div class="mb-4">
        <div class="dropdown w-100">
            <button class="btn btn-primary dropdown-toggle w-100" type="button" id="statsDropdown"
                data-bs-toggle="dropdown" aria-expanded="false">
                <i class="bi bi-bar-chart"></i> Recurring Expense Statistics
            </button>
            <ul class="dropdown-menu w-100" aria-labelledby="statsDropdown">
                <li><span class="dropdown-item-text"><i class="bi bi-list-ul text-primary"></i> <strong>Total:</strong>
                        @Model.Count()</span></li>
                <li><span class="dropdown-item-text"><i class="bi bi-clock text-warning"></i> <strong>Pending:</strong>
                        @Model.Count(e => e.Status == "Pending")</span></li>
                <li><span class="dropdown-item-text"><i class="bi bi-check-circle text-success"></i>
                        <strong>Paid:</strong> @Model.Count(e => e.Status == "Paid")</span></li>
                <li><span class="dropdown-item-text"><i class="bi bi-exclamation-triangle text-danger"></i>
                        <strong>Overdue:</strong> @Model.Count(e => e.Status == "Overdue")</span></li>
                <li><span class="dropdown-item-text"><i class="bi bi-pause-circle text-secondary"></i>
                        <strong>Postponed:</strong> @Model.Count(e => e.Status == "Postponed")</span></li>
            </ul>
        </div>
    </div>

    <!-- Desktop Table View -->
    <div class="d-none d-lg-block">
        <div class="card shadow-sm">
            <div class="card-body p-0">
                <div class="table-responsive">
                    <table class="table table-striped table-hover align-middle mb-0">
                        <thead class="table-dark">
                            <tr>
                                <th class="text-nowrap">Name</th>
                                <th class="text-nowrap">Amount</th>
                                <th class="text-nowrap">Due Date</th>
                                <th class="text-nowrap">Status</th>
                                <th class="text-nowrap">Category</th>
                                <th class="text-nowrap">Location</th>
                                <th class="text-nowrap">Due Day</th>
                                <th class="text-nowrap">Paid Date</th>
                                <th class="text-nowrap">Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var e in Model)
                            {
                                <tr>
                                    <td class="text-truncate" style="max-width: 200px;" title="@e.Name">@e.Name</td>
                                    <td class="text-nowrap fw-bold">â‚±@e.Amount.ToString("N2")</td>
                                    <td class="text-nowrap">@e.DueDate.ToString("MMM dd, yyyy")</td>
                                    <td>
                                        <span
                                            class="badge bg-@statusColors.GetValueOrDefault(e.Status, "secondary")">@e.Status</span>
                                    </td>
                                    <td class="text-truncate" style="max-width: 120px;" title="@e.Category">@e.Category</td>
                                    <td class="text-truncate" style="max-width: 120px;" title="@e.Location">@e.Location</td>
                                    <td class="text-center">@e.DayOfMonthDue</td>
                                    <td class="text-nowrap">@(e.PaidDate?.ToString("MMM dd, yyyy") ?? "-")</td>
                                    <td>
                                        <div class="btn-group" role="group">
                                            @if (e.CanMarkAsPaid)
                                            {
                                                <button type="button" class="btn btn-sm btn-outline-success"
                                                    data-bs-toggle="modal" data-bs-target="#markAsPaidModal"
                                                    data-expense-id="@e.Id" data-expense-name="@e.Name"
                                                    data-year="@e.CurrentYear" data-month="@e.CurrentMonth"
                                                    title="Mark as Paid">
                                                    <i class="bi bi-check-circle"></i>
                                                </button>
                                            }
                                            @if (e.CanPostpone)
                                            {
                                                <button type="button" class="btn btn-sm btn-outline-secondary"
                                                    data-bs-toggle="modal" data-bs-target="#postponeModal"
                                                    data-expense-id="@e.Id" data-expense-name="@e.Name"
                                                    data-year="@e.CurrentYear" data-month="@e.CurrentMonth" title="Postpone">
                                                    <i class="bi bi-pause-circle"></i>
                                                </button>
                                            }
                                            <a asp-action="PaymentHistory" asp-route-id="@e.Id"
                                                class="btn btn-sm btn-outline-info" title="Payment History">
                                                <i class="bi bi-clock-history"></i>
                                            </a>
                                            <a asp-action="Edit" asp-route-id="@e.Id" class="btn btn-sm btn-outline-primary"
                                                title="Edit">
                                                <i class="bi bi-pencil"></i>
                                            </a>
                                            <a asp-action="Delete" asp-route-id="@e.Id"
                                                class="btn btn-sm btn-outline-danger" title="Delete">
                                                <i class="bi bi-trash"></i>
                                            </a>
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>

    <!-- Mobile Card View -->
    <div class="d-lg-none">
        @if (!Model.Any())
        {
            <div class="text-center py-5">
                <i class="bi bi-inbox fs-1 text-muted"></i>
                <h4 class="mt-3">No recurring expenses found</h4>
                <p class="text-muted">Try adjusting your filters or add a new recurring expense.</p>
                <a asp-action="Create" class="btn btn-primary">
                    <i class="bi bi-plus-circle"></i> Add First Recurring Expense
                </a>
            </div>
        }
        else
        {
            @foreach (var e in Model)
            {
                <div class="card mb-3 shadow-sm">
                    <div class="card-body">
                        <div class="d-flex justify-content-between align-items-start mb-2">
                            <h6 class="card-title mb-0 text-truncate" style="max-width: 200px;" title="@e.Name">@e.Name</h6>
                            <span class="badge bg-@statusColors.GetValueOrDefault(e.Status, "secondary")">@e.Status</span>
                        </div>

                        <div class="row g-2 mb-2">
                            <div class="col-6">
                                <small class="text-muted">Amount:</small>
                                <div class="fw-bold">â‚±@e.Amount.ToString("N2")</div>
                            </div>
                            <div class="col-6">
                                <small class="text-muted">Due Date:</small>
                                <div>@e.DueDate.ToString("MMM dd, yyyy")</div>
                            </div>
                        </div>

                        <div class="row g-2 mb-3">
                            <div class="col-6">
                                <small class="text-muted">Category:</small>
                                <div class="text-truncate" title="@e.Category">@e.Category</div>
                            </div>
                            <div class="col-6">
                                <small class="text-muted">Due Day:</small>
                                <div>@e.DayOfMonthDue</div>
                            </div>
                        </div>

                        <div class="d-flex justify-content-between align-items-center">
                            <div class="d-flex gap-2">
                                @if (e.PaidDate.HasValue)
                                {
                                    <span class="badge bg-success">
                                        <i class="bi bi-check-circle"></i> Paid @e.PaidDate.Value.ToString("MMM dd")
                                    </span>
                                }
                            </div>
                            <div class="btn-group" role="group">
                                @if (e.CanMarkAsPaid)
                                {
                                    <button type="button" class="btn btn-sm btn-outline-success" data-bs-toggle="modal"
                                        data-bs-target="#markAsPaidModal" data-expense-id="@e.Id" data-expense-name="@e.Name"
                                        data-year="@e.CurrentYear" data-month="@e.CurrentMonth" title="Mark as Paid">
                                        <i class="bi bi-check-circle"></i>
                                    </button>
                                }
                                @if (e.CanPostpone)
                                {
                                    <button type="button" class="btn btn-sm btn-outline-secondary" data-bs-toggle="modal"
                                        data-bs-target="#postponeModal" data-expense-id="@e.Id" data-expense-name="@e.Name"
                                        data-year="@e.CurrentYear" data-month="@e.CurrentMonth" title="Postpone">
                                        <i class="bi bi-pause-circle"></i>
                                    </button>
                                }
                                <a asp-action="PaymentHistory" asp-route-id="@e.Id" class="btn btn-sm btn-outline-info"
                                    title="Payment History">
                                    <i class="bi bi-clock-history"></i>
                                </a>
                                <a asp-action="Edit" asp-route-id="@e.Id" class="btn btn-sm btn-outline-primary" title="Edit">
                                    <i class="bi bi-pencil"></i>
                                </a>
                                <a asp-action="Delete" asp-route-id="@e.Id" class="btn btn-sm btn-outline-danger"
                                    title="Delete">
                                    <i class="bi bi-trash"></i>
                                </a>
                            </div>
                        </div>
                    </div>
                </div>
            }
        }
    </div>


</div>

<!-- Mark as Paid Modal -->
<div class="modal fade" id="markAsPaidModal" tabindex="-1" aria-labelledby="markAsPaidModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="markAsPaidModalLabel">Mark as Paid</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form asp-action="MarkAsPaid" method="post">
                <div class="modal-body">
                    <input type="hidden" id="paidExpenseId" name="id" />
                    <input type="hidden" id="paidYear" name="year" />
                    <input type="hidden" id="paidMonth" name="month" />

                    <div class="mb-3">
                        <label class="form-label">Expense</label>
                        <input type="text" id="paidExpenseName" class="form-control" readonly />
                    </div>

                    <div class="mb-3">
                        <label for="amountPaid" class="form-label">Amount Paid</label>
                        <div class="input-group">
                            <span class="input-group-text">â‚±</span>
                            <input type="number" id="amountPaid" name="amountPaid" class="form-control" step="0.01"
                                min="0" />
                        </div>
                    </div>

                    <div class="mb-3">
                        <label for="paymentMethod" class="form-label">Payment Method</label>
                        <select id="paymentMethod" name="paymentMethod" class="form-select">
                            <option value="">Select method</option>
                            <option value="Cash">Cash</option>
                            <option value="Bank Transfer">Bank Transfer</option>
                            <option value="Credit Card">Credit Card</option>
                            <option value="Check">Check</option>
                            <option value="Other">Other</option>
                        </select>
                    </div>

                    <div class="mb-3">
                        <label for="paymentNotes" class="form-label">Notes</label>
                        <textarea id="paymentNotes" name="notes" class="form-control" rows="3"></textarea>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-success">Mark as Paid</button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Postpone Modal -->
<div class="modal fade" id="postponeModal" tabindex="-1" aria-labelledby="postponeModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="postponeModalLabel">Postpone Expense</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form asp-action="Postpone" method="post">
                <div class="modal-body">
                    <input type="hidden" id="postponeExpenseId" name="id" />
                    <input type="hidden" id="postponeYear" name="year" />
                    <input type="hidden" id="postponeMonth" name="month" />

                    <div class="mb-3">
                        <label class="form-label">Expense</label>
                        <input type="text" id="postponeExpenseName" class="form-control" readonly />
                    </div>

                    <div class="mb-3">
                        <label for="postponeNotes" class="form-label">Reason for Postponement</label>
                        <textarea id="postponeNotes" name="notes" class="form-control" rows="3"
                            placeholder="Enter reason for postponement..."></textarea>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-warning">Postpone</button>
                </div>
            </form>
        </div>
    </div>
</div>

<style>
    .card {
        transition: transform 0.2s ease-in-out, box-shadow 0.2s ease-in-out;
    }

    .card:hover {
        transform: translateY(-2px);
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1) !important;
    }

    .table th {
        font-weight: 600;
        border-top: none;
    }

    .btn-group .btn {
        border-radius: 0.375rem !important;
    }

    .btn-group .btn:first-child {
        border-top-right-radius: 0 !important;
        border-bottom-right-radius: 0 !important;
    }

    .btn-group .btn:last-child {
        border-top-left-radius: 0 !important;
        border-bottom-left-radius: 0 !important;
    }

    @@media (max-width: 768px) {
        .container-fluid {
            padding-left: 10px;
            padding-right: 10px;
        }
    }
</style>

<script>
    // Handle modal data population
    document.addEventListener('DOMContentLoaded', function () {
        // Mark as Paid Modal
        const markAsPaidModal = document.getElementById('markAsPaidModal');
        if (markAsPaidModal) {
            markAsPaidModal.addEventListener('show.bs.modal', function (event) {
                const button = event.relatedTarget;
                const expenseId = button.getAttribute('data-expense-id');
                const expenseName = button.getAttribute('data-expense-name');
                const year = button.getAttribute('data-year');
                const month = button.getAttribute('data-month');

                document.getElementById('paidExpenseId').value = expenseId;
                document.getElementById('paidExpenseName').value = expenseName;
                document.getElementById('paidYear').value = year;
                document.getElementById('paidMonth').value = month;
            });
        }

        // Postpone Modal
        const postponeModal = document.getElementById('postponeModal');
        if (postponeModal) {
            postponeModal.addEventListener('show.bs.modal', function (event) {
                const button = event.relatedTarget;
                const expenseId = button.getAttribute('data-expense-id');
                const expenseName = button.getAttribute('data-expense-name');
                const year = button.getAttribute('data-year');
                const month = button.getAttribute('data-month');

                document.getElementById('postponeExpenseId').value = expenseId;
                document.getElementById('postponeExpenseName').value = expenseName;
                document.getElementById('postponeYear').value = year;
                document.getElementById('postponeMonth').value = month;
            });
        }
    });

    // Confirmation popup for Mark as Paid
    document.addEventListener('DOMContentLoaded', function () {
        document.querySelectorAll('button[data-bs-target="#markAsPaidModal"]').forEach(function (btn) {
            btn.addEventListener('click', function (e) {
                var confirmPaid = confirm('Are you sure you want to mark this recurring expense as paid? This action can be undone.');
                if (!confirmPaid) {
                    e.preventDefault();
                    e.stopPropagation();
                }
            });
        });
    });
</script>