@model List<TestingDemo.Models.ClientModel>

@{
    ViewData["Title"] = "Client Monitoring";
}

<!-- Hero Section -->
<div class="monitoring-hero-section">
    <div class="container">
        <div class="hero-header" data-bs-toggle="collapse" data-bs-target="#heroContent" aria-expanded="true">
            <div class="d-flex align-items-center justify-content-between">
                <div class="d-flex align-items-center">
                    <i class="bi bi-people-fill me-3 fs-2"></i>
                    <h1 class="hero-title mb-0">Client Monitoring Dashboard</h1>
                </div>
                <i class="bi bi-chevron-up hero-toggle"></i>
            </div>
        </div>
        <div class="collapse show" id="heroContent">
            <div class="row align-items-center mt-4">
                <div class="col-lg-8">
                    <div class="hero-content">
                        <p class="hero-subtitle">
                            Comprehensive oversight of active client projects and real-time status tracking
                        </p>
                    </div>
                </div>
                <div class="col-lg-4">
                    <div class="hero-actions">
                        <a href="/Archive" class="btn btn-light btn-lg me-2">
                            <i class="bi bi-archive me-2"></i>View Archived
                        </a>
                        <button class="btn btn-outline-light btn-lg" onclick="refreshTable()">
                            <i class="bi bi-arrow-clockwise me-2"></i>Refresh
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Statistics Cards -->
<div class="container monitoring-container">
    <div class="row g-4 mb-4">
        <div class="col-lg-3 col-md-6">
            <div class="stat-card stat-card-primary">
                <div class="stat-icon">
                    <i class="bi bi-people"></i>
                </div>
                <div class="stat-content">
                    <h3 class="stat-number">@Model.Count</h3>
                    <p class="stat-label">Total Active Clients</p>
                </div>
            </div>
        </div>
        <div class="col-lg-3 col-md-6">
            <div class="stat-card stat-card-warning">
                <div class="stat-icon">
                    <i class="bi bi-clock"></i>
                </div>
                <div class="stat-content">
                    <h3 class="stat-number">@Model.Count(c => c.Status == "Pending")</h3>
                    <p class="stat-label">Pending</p>
                </div>
            </div>
        </div>
        <div class="col-lg-3 col-md-6">
            <div class="stat-card stat-card-info">
                <div class="stat-icon">
                    <i class="bi bi-gear"></i>
                </div>
                <div class="stat-content">
                    <h3 class="stat-number">@Model.Count(c => c.Status != "Pending")</h3>
                    <p class="stat-label">In Progress</p>
                </div>
            </div>
        </div>
        <div class="col-lg-3 col-md-6">
            <div class="stat-card stat-card-success">
                <div class="stat-icon">
                    <i class="bi bi-check-circle"></i>
                </div>
                <div class="stat-content">
                    <h3 class="stat-number">@Model.Count(c => c.Status == "Clearance")</h3>
                    <p class="stat-label">Completed</p>
                </div>
            </div>
        </div>
    </div>

    <!-- Advanced Search & Filter -->
    <div class="filter-card">
        <div class="filter-header" data-bs-toggle="collapse" data-bs-target="#filterCollapse" aria-expanded="false">
            <div class="d-flex align-items-center">
                <i class="bi bi-funnel-fill me-2"></i>
                <h5 class="mb-0">Advanced Search & Filter</h5>
            </div>
            <i class="bi bi-chevron-down filter-toggle"></i>
        </div>
        <div class="collapse" id="filterCollapse">
            <div class="filter-body">
                <div class="row g-3">
                    <div class="col-lg-4 col-md-6">
                        <label class="form-label">
                            <i class="bi bi-search me-1"></i>Search Clients
                        </label>
                        <input type="text" id="searchInput" class="form-control modern-input"
                            placeholder="Search by name, tracking number, or company...">
                    </div>
                    <div class="col-lg-3 col-md-6">
                        <label class="form-label">
                            <i class="bi bi-building me-1"></i>Department
                        </label>
                        <select id="statusFilter" class="form-select modern-select">
                            <option value="">All Departments</option>
                            <option value="Pending">Pending</option>
                            <option value="Finance">Finance</option>
                            <option value="Planning">Planning</option>
                            <option value="Liaison">Liaison</option>
                            <option value="Received">Received</option>
                            <option value="DocumentOfficer">Document Officer</option>
                            <option value="Clearance">Clearance</option>
                        </select>
                    </div>
                    <div class="col-lg-3 col-md-6">
                        <label class="form-label">
                            <i class="bi bi-exclamation-triangle me-1"></i>Urgency Level
                        </label>
                        <select id="urgencyFilter" class="form-select modern-select">
                            <option value="">All Urgency Levels</option>
                            <option value="High">High</option>
                            <option value="Normal">Normal</option>
                            <option value="Low">Low</option>
                        </select>
                    </div>
                    <div class="col-lg-2 col-md-6">
                        <label class="form-label">&nbsp;</label>
                        <button class="btn btn-primary w-100 modern-btn" onclick="applyFilters()">
                            <i class="bi bi-funnel me-1"></i>Filter
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Active Clients Section -->
    <div class="clients-section">
        <div class="d-flex justify-content-between align-items-center mb-4">
            <div class="section-header">
                <h4 class="section-title">
                    <i class="bi bi-people-fill me-2"></i>
                    Active Clients
                    <span class="badge bg-primary ms-2">@Model.Count</span>
                </h4>
            </div>
            <div class="view-toggle">
                <div class="btn-group" role="group">
                    <button type="button" class="btn btn-outline-primary" id="gridViewBtn">
                        <i class="bi bi-grid-3x3-gap"></i> Grid
                    </button>
                    <button type="button" class="btn btn-outline-primary active" id="listViewBtn">
                        <i class="bi bi-list-ul"></i> List
                    </button>
                </div>
            </div>
        </div>

        <!-- Grid View -->
        <div id="gridView" class="row g-4 d-none">
            @foreach (var client in Model)
            {
                <div class="col-lg-4 col-md-6" data-status="@client.Status" data-urgency="@client.UrgencyLevel">
                    <div class="client-card">
                        <div class="client-card-header">
                            <div class="client-avatar">
                                <i class="bi bi-person-circle"></i>
                            </div>
                            <div class="client-info">
                                <h6 class="client-name">@client.ClientName</h6>
                                <small class="text-muted">@client.RegisteredCompanyName</small>
                            </div>
                            <span class="status-badge @GetStatusBadgeClass(client.Status)">@client.Status</span>
                        </div>
                        <div class="client-card-body">
                            <div class="client-details">
                                <div class="detail-item">
                                    <i class="bi bi-hash text-muted"></i>
                                    <span class="tracking-number">@client.TrackingNumber</span>
                                </div>
                                <div class="detail-item">
                                    <i class="bi bi-briefcase text-muted"></i>
                                    <span class="project-type">
                                        @if (!string.IsNullOrEmpty(client.OtherTypeOfProject))
                                        {
                                            <span>@client.TypeOfProject - @client.OtherTypeOfProject</span>
                                        }
                                        else
                                        {
                                            @client.TypeOfProject
                                        }
                                    </span>
                                </div>
                                <div class="detail-item">
                                    <i class="bi bi-calendar text-muted"></i>
                                    <span>@client.CreatedDate.ToString("MMM dd, yyyy")</span>
                                </div>
                            </div>
                            <div class="urgency-badge @GetUrgencyBadgeClass(client.UrgencyLevel)">
                                @client.UrgencyLevel
                            </div>
                        </div>
                        <div class="client-card-footer">
                            <button class="btn btn-primary btn-sm w-100" onclick="viewClientDetails(@client.Id)">
                                <i class="bi bi-eye me-1"></i>View Details
                            </button>
                        </div>
                    </div>
                </div>
            }
        </div>

        <!-- List View -->
        <div id="listView">
            <div class="list-view-container">
                @foreach (var client in Model)
                {
                    <div class="list-item" data-status="@client.Status" data-urgency="@client.UrgencyLevel">
                        <div class="row align-items-center">
                            <div class="col-md-3">
                                <div class="d-flex align-items-center">
                                    <div class="client-avatar me-3">
                                        <i class="bi bi-person-circle"></i>
                                    </div>
                                    <div>
                                        <h6 class="mb-0">@client.ClientName</h6>
                                        <small class="text-muted">@client.RegisteredCompanyName</small>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-2">
                                <span class="badge bg-secondary font-monospace">@client.TrackingNumber</span>
                            </div>
                            <div class="col-md-2">
                                <span class="project-type-badge">
                                    @if (!string.IsNullOrEmpty(client.OtherTypeOfProject))
                                    {
                                        <span>@client.TypeOfProject - @client.OtherTypeOfProject</span>
                                    }
                                    else
                                    {
                                        @client.TypeOfProject
                                    }
                                </span>
                            </div>
                            <div class="col-md-2">
                                <span class="badge @GetStatusBadgeClass(client.Status)">@client.Status</span>
                            </div>
                            <div class="col-md-2">
                                <span class="badge @GetUrgencyBadgeClass(client.UrgencyLevel)">@client.UrgencyLevel</span>
                            </div>
                            <div class="col-md-1">
                                <button class="btn btn-outline-primary btn-sm" onclick="viewClientDetails(@client.Id)">
                                    <i class="bi bi-eye"></i>
                                </button>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>

        @if (!Model.Any())
        {
            <div class="empty-state">
                <div class="empty-state-content">
                    <i class="bi bi-people empty-state-icon"></i>
                    <h5>No Active Clients Found</h5>
                    <p class="text-muted">There are currently no active clients to display.</p>
                    <button class="btn btn-primary" onclick="refreshTable()">
                        <i class="bi bi-arrow-clockwise me-1"></i>Refresh
                    </button>
                </div>
            </div>
        }
    </div>
</div>

<!-- Client Details Modal -->
<div class="modal fade" id="clientDetailsModal" tabindex="-1" aria-labelledby="clientDetailsModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-xl modal-dialog-scrollable">
        <div class="modal-content border-0 shadow">
            <div class="modal-header bg-primary text-white border-0 py-3">
                <h5 class="modal-title d-flex flex-wrap align-items-center gap-3 mb-0">
                    <i class="bi bi-person-circle fs-4"></i>
                    <span class="fw-bold" id="modalClientName">Client Details</span>
                    <span class="badge bg-light text-primary rounded-pill fs-6" id="modalProjectType">Project Type</span>
                </h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body p-4" id="clientDetailsContent">
                <!-- Content will be loaded here -->
            </div>
            <div class="modal-footer bg-light">
                <button type="button" class="btn btn-outline-secondary" data-bs-dismiss="modal">
                    <i class="bi bi-x-circle me-1"></i>Close
                </button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function viewClientDetails(clientId) {
            fetch(`/Admin/GetClientDetails/${clientId}`)
                .then(response => response.json())
                .then(client => {
                    document.getElementById('modalClientName').textContent = client.clientName;
                    document.getElementById('modalProjectType').textContent = client.typeOfProject;
                    
                    const content = `
                            <div class="row">
                                <div class="col-md-6">
                                    <h6 class="text-primary"><i class="bi bi-info-circle"></i> Basic Information</h6>
                                    <table class="table table-borderless">
                                        <tr><td><strong>Tracking Number:</strong></td><td><span class="badge bg-secondary">${client.trackingNumber}</span></td></tr>
                                        <tr><td><strong>Client Name:</strong></td><td>${client.clientName}</td></tr>
                                        <tr><td><strong>Requesting Party:</strong></td><td>${client.requestingParty || 'N/A'}</td></tr>
                                        <tr><td><strong>Requestor Name:</strong></td><td>${client.requestorName || 'N/A'}</td></tr>
                                        <tr><td><strong>Client Type:</strong></td><td>${client.clientType || 'N/A'}</td></tr>
                                        <tr><td><strong>Tax ID:</strong></td><td>${client.taxId || 'N/A'}</td></tr>
                                    </table>
                                </div>
                                <div class="col-md-6">
                                    <h6 class="text-primary"><i class="bi bi-building"></i> Company Information</h6>
                                    <table class="table table-borderless">
                                        <tr><td><strong>Company Name:</strong></td><td>${client.registeredCompanyName || 'N/A'}</td></tr>
                                        <tr><td><strong>Company Address:</strong></td><td>${client.registeredCompanyAddress || 'N/A'}</td></tr>
                                        <tr><td><strong>Contact Number:</strong></td><td>${client.contactPersonNumber || 'N/A'}</td></tr>
                                        <tr><td><strong>Contact Email:</strong></td><td>${client.contactPersonEmailAddress || 'N/A'}</td></tr>
                                    </table>
                                </div>
                            </div>
                            <hr>
                            <div class="row">
                                <div class="col-md-6">
                                    <h6 class="text-primary"><i class="bi bi-project-diagram"></i> Project Information</h6>
                                    <table class="table table-borderless">
                                        <tr><td><strong>Project Type:</strong></td><td>${client.typeOfProject}</td></tr>
                                        <tr><td><strong>Other Project Type:</strong></td><td>${client.otherTypeOfProject || 'N/A'}</td></tr>
                                        <tr><td><strong>Urgency Level:</strong></td><td><span class="badge ${getUrgencyBadgeClass(client.urgencyLevel)}">${client.urgencyLevel}</span></td></tr>
                                        <tr><td><strong>Current Status:</strong></td><td><span class="badge ${getStatusBadgeClass(client.status)}">${client.status}</span></td></tr>
                                        <tr><td><strong>Created Date:</strong></td><td>${client.createdDate}</td></tr>
                                    </table>
                                </div>
                                <div class="col-md-6">
                                    <h6 class="text-primary"><i class="bi bi-sticky"></i> Additional Information</h6>
                                    <table class="table table-borderless">
                                        <tr><td><strong>Other Requesting Party:</strong></td><td>${client.otherRequestingParty || 'N/A'}</td></tr>
                                        <tr><td><strong>Planning Return Note:</strong></td><td>${client.planningReturnNote || 'N/A'}</td></tr>
                                    </table>
                                </div>
                            </div>
                            ${getProjectSpecificDetails(client)}
                                        ${getRequirementsDetails(client.requirements)}
                        `;

                    document.getElementById('clientDetailsContent').innerHTML = content;
                    new bootstrap.Modal(document.getElementById('clientDetailsModal')).show();
                })
                .catch(error => {
                    console.error('Error fetching client details:', error);
                    alert('Error loading client details. Please try again.');
                });
        }

        function getProjectSpecificDetails(client) {
            let details = '<hr><div class="row"><div class="col-12"><h6 class="text-primary"><i class="bi bi-file-earmark-text"></i> Project-Specific Details</h6>';

            if (client.retainershipBIR) {
                details += '<div class="alert alert-info"><strong>Retainership BIR Details:</strong><br>';
                details += `<strong>Type of Registrant:</strong> ${client.retainershipBIR.typeOfRegistrant || 'N/A'}<br>`;
                details += `<strong>OCN Notes:</strong> ${client.retainershipBIR.ocnNotes || 'N/A'}<br>`;
                details += `<strong>Date OCN Generated:</strong> ${client.retainershipBIR.dateOCNGenerated || 'N/A'}<br>`;
                details += `<strong>Date BIR Registration:</strong> ${client.retainershipBIR.dateBIRRegistration || 'N/A'}<br>`;
                details += `<strong>BIR RDO No:</strong> ${client.retainershipBIR.birRdoNo || 'N/A'}<br>`;
                details += `<strong>Tax Filing Status:</strong> ${client.retainershipBIR.taxFilingStatus || 'N/A'}<br>`;
                details += `<strong>Need Catch-Up Accounting:</strong> ${client.retainershipBIR.needCatchUpAccounting || 'N/A'}<br>`;
                details += `<strong>Retainership Start Date:</strong> ${client.retainershipBIR.birRetainershipStartDate || 'N/A'}`;
                details += '</div>';
            }
            if (client.retainershipSPP) {
                details += '<div class="alert alert-info"><strong>Retainership SPP Details:</strong><br>';
                details += `<strong>SSS Reg No:</strong> ${client.retainershipSPP.sssCompanyRegNo || 'N/A'}<br>`;
                details += `<strong>SSS Reg Date:</strong> ${client.retainershipSPP.sssRegistrationDate || 'N/A'}<br>`;
                details += `<strong>PHIC Reg No:</strong> ${client.retainershipSPP.phicCompanyRegNo || 'N/A'}<br>`;
                details += `<strong>PHIC Reg Date:</strong> ${client.retainershipSPP.phicRegistrationDate || 'N/A'}<br>`;
                details += `<strong>HDMF Reg No:</strong> ${client.retainershipSPP.hdmfCompanyRegNo || 'N/A'}<br>`;
                details += `<strong>HDMF Reg Date:</strong> ${client.retainershipSPP.hdmfRegistrationDate || 'N/A'}<br>`;
                details += `<strong>Retainership Start Date:</strong> ${client.retainershipSPP.sppRetainershipStartDate || 'N/A'}`;
                details += '</div>';
            }
            if (client.oneTimeTransaction) {
                details += '<div class="alert alert-info"><strong>One-Time Transaction Details:</strong><br>';
                details += `<strong>Type of Registrant:</strong> ${client.oneTimeTransaction.typeOfRegistrant || 'N/A'}<br>`;
                details += `<strong>Area of Services:</strong> ${client.oneTimeTransaction.areaOfServices || 'N/A'}<br>`;
                details += `<strong>Other Area of Services:</strong> ${client.oneTimeTransaction.otherAreaOfServices || 'N/A'}`;
                details += '</div>';
            }
            if (client.externalAudit) {
                details += '<div class="alert alert-info"><strong>External Audit Details:</strong><br>';
                details += `<strong>Audit Status:</strong> ${client.externalAudit.externalAuditStatus || 'N/A'}<br>`;
                details += `<strong>Purposes:</strong> ${client.externalAudit.externalAuditPurposes || 'N/A'}<br>`;
                details += `<strong>Other Purpose:</strong> ${client.externalAudit.externalAuditOtherPurpose || 'N/A'}<br>`;
                details += `<strong>Report Date:</strong> ${client.externalAudit.externalAuditReportDate || 'N/A'}`;
                details += '</div>';
            }

            if (!client.retainershipBIR && !client.retainershipSPP && !client.oneTimeTransaction && !client.externalAudit) {
                details += '<div class="alert alert-warning">No additional project-specific details available</div>';
            }

            details += '</div></div>';
            return details;
        }

        function getRequirementsDetails(requirements) {
            if (!requirements || requirements.length === 0) {
                return '<hr><div class="row"><div class="col-12"><h6 class="text-primary"><i class="bi bi-list-check"></i> Permit Requirements</h6><div class="alert alert-warning">No requirements found for this client.</div></div></div>';
            }

            let details = '<hr><div class="row"><div class="col-12"><h6 class="text-primary"><i class="bi bi-list-check"></i> Permit Requirements</h6>';
            details += '<div class="table-responsive"><table class="table table-striped table-hover">';
            details += '<thead class="table-dark"><tr><th>Requirement Name</th><th>Description</th><th>Required</th><th>Completed</th><th>Present</th><th>Created Date</th></tr></thead><tbody>';

            requirements.forEach(req => {
                const requiredBadge = req.isRequired ? '<span class="badge bg-danger">Required</span>' : '<span class="badge bg-secondary">Optional</span>';
                const completedBadge = req.isCompleted ? '<span class="badge bg-success">Yes</span>' : '<span class="badge bg-warning">No</span>';
                const presentBadge = req.isPresent ? '<span class="badge bg-success">Yes</span>' : '<span class="badge bg-warning">No</span>';

                details += `<tr>
                                    <td><strong>${req.requirementName}</strong></td>
                                    <td>${req.description}</td>
                                    <td>${requiredBadge}</td>
                                    <td>${completedBadge}</td>
                                    <td>${presentBadge}</td>
                                    <td>${req.createdDate}</td>
                                </tr>`;
            });

            details += '</tbody></table></div></div></div>';
            return details;
        }

        function getStatusBadgeClass(status) {
            const statusClasses = {
                'Pending': 'bg-warning',
                'Finance': 'bg-primary',
                'Planning': 'bg-info',
                'Liaison': 'bg-secondary',
                'Received': 'bg-success',
                'DocumentOfficer': 'bg-dark',
                'Clearance': 'bg-success',
                'Archived': 'bg-secondary'
            };
            return statusClasses[status] || 'bg-secondary';
        }

        function getUrgencyBadgeClass(urgency) {
            const urgencyClasses = {
                'High': 'bg-danger',
                'Normal': 'bg-warning',
                'Low': 'bg-success'
            };
            return urgencyClasses[urgency] || 'bg-secondary';
        }

        function applyFilters() {
            const searchTerm = document.getElementById('searchInput').value.toLowerCase();
            const statusFilter = document.getElementById('statusFilter').value;
            const urgencyFilter = document.getElementById('urgencyFilter').value;

            // Filter both grid and list views
            const gridItems = document.querySelectorAll('#gridView .col-lg-4');
            const listItems = document.querySelectorAll('#listView .list-item');

            [gridItems, listItems].forEach(items => {
                items.forEach(item => {
                    const clientName = item.querySelector('.client-name, h6')?.textContent.toLowerCase() || '';
                    const trackingNumber = item.querySelector('.tracking-number, .badge')?.textContent.toLowerCase() || '';
                    const company = item.querySelector('.text-muted')?.textContent.toLowerCase() || '';
                    const status = item.dataset.status;
                    const urgency = item.dataset.urgency;

                    const matchesSearch = clientName.includes(searchTerm) ||
                        trackingNumber.includes(searchTerm) ||
                        company.includes(searchTerm);
                    const matchesStatus = !statusFilter || status === statusFilter;
                    const matchesUrgency = !urgencyFilter || urgency === urgencyFilter;

                    item.style.display = (matchesSearch && matchesStatus && matchesUrgency) ? '' : 'none';
                });
            });
        }

        function refreshTable() {
            location.reload();
        }

        // View toggle functionality
        document.getElementById('gridViewBtn').addEventListener('click', function() {
            document.getElementById('gridView').classList.remove('d-none');
            document.getElementById('listView').classList.add('d-none');
            this.classList.add('active');
            document.getElementById('listViewBtn').classList.remove('active');
        });

        document.getElementById('listViewBtn').addEventListener('click', function() {
            document.getElementById('listView').classList.remove('d-none');
            document.getElementById('gridView').classList.add('d-none');
            this.classList.add('active');
            document.getElementById('gridViewBtn').classList.remove('active');
        });

        // Auto-filter on search input
        document.getElementById('searchInput').addEventListener('input', applyFilters);
        document.getElementById('statusFilter').addEventListener('change', applyFilters);
        document.getElementById('urgencyFilter').addEventListener('change', applyFilters);
    </script>
}

@functions {
    public string GetStatusBadgeClass(string status)
    {
        return status switch
        {
            "Pending" => "bg-warning",
            "Finance" => "bg-primary",
            "Planning" => "bg-info",
            "Liaison" => "bg-secondary",
            "Received" => "bg-success",
            "DocumentOfficer" => "bg-dark",
            "Clearance" => "bg-success",
            "Archived" => "bg-secondary",
            _ => "bg-secondary"
        };
    }

    public string GetUrgencyBadgeClass(string urgency)
    {
        return urgency switch
        {
            "High" => "bg-danger",
            "Normal" => "bg-warning",
            "Low" => "bg-success",
            _ => "bg-secondary"
        };
    }
}

<style>
    /* Hero Section */
    .monitoring-hero-section {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        color: white;
        padding: 4rem 0 5rem 0;
        margin-bottom: 0;
        position: relative;
        overflow: hidden;
    }

    .monitoring-hero-section::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100"><defs><pattern id="grain" width="100" height="100" patternUnits="userSpaceOnUse"><circle cx="25" cy="25" r="1" fill="white" opacity="0.1"/><circle cx="75" cy="75" r="1" fill="white" opacity="0.1"/><circle cx="50" cy="10" r="0.5" fill="white" opacity="0.1"/><circle cx="10" cy="60" r="0.5" fill="white" opacity="0.1"/><circle cx="90" cy="40" r="0.5" fill="white" opacity="0.1"/></pattern></defs><rect width="100" height="100" fill="url(%23grain)"/></svg>');
        opacity: 0.3;
    }

    .hero-content {
        position: relative;
        z-index: 2;
    }

    .hero-title {
        font-size: 3rem;
        font-weight: 700;
        margin-bottom: 1rem;
        text-shadow: 0 2px 4px rgba(0,0,0,0.3);
    }

    .hero-subtitle {
        font-size: 1.2rem;
        opacity: 0.9;
        margin-bottom: 0;
    }

    .hero-actions {
        position: relative;
        z-index: 2;
    }

    .hero-header {
        cursor: pointer;
        transition: all 0.3s ease;
        padding: 1rem 0;
    }

    .hero-header:hover {
        opacity: 0.9;
    }

    .hero-toggle {
        transition: transform 0.3s ease;
        font-size: 1.5rem;
    }

    .hero-header[aria-expanded="false"] .hero-toggle {
        transform: rotate(180deg);
    }

    /* Container */
    .monitoring-container {
        margin-top: -10px;
        position: relative;
        z-index: 3;
        padding-bottom: 2rem;
        padding-top: 2rem;
    }

    /* Statistics Cards */
    .stat-card {
        background: white !important;
        border-radius: 20px;
        padding: 2rem;
        box-shadow: 0 10px 30px rgba(0, 0, 0, 0.15);
        border: 2px solid #e2e8f0;
        transition: all 0.3s ease;
        position: relative;
        overflow: hidden;
    }

    .stat-card::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        height: 4px;
        background: linear-gradient(90deg, var(--card-color), var(--card-color-light));
    }

    .stat-card:hover {
        transform: translateY(-5px);
        box-shadow: 0 20px 40px rgba(0,0,0,0.15);
    }

    .stat-card-primary {
        --card-color: #667eea;
        --card-color-light: #764ba2;
    }

    .stat-card-warning {
        --card-color: #f093fb;
        --card-color-light: #f5576c;
    }

    .stat-card-info {
        --card-color: #4facfe;
        --card-color-light: #00f2fe;
    }

    .stat-card-success {
        --card-color: #43e97b;
        --card-color-light: #38f9d7;
    }

    .stat-icon {
        width: 60px;
        height: 60px;
        border-radius: 15px;
        display: flex;
        align-items: center;
        justify-content: center;
        margin-bottom: 1rem;
        background: linear-gradient(135deg, var(--card-color), var(--card-color-light));
        color: white;
        font-size: 1.5rem;
    }

    .stat-number {
        font-size: 2.5rem;
        font-weight: 700;
        margin-bottom: 0.5rem;
        color: #2d3748;
    }

    .stat-label {
        color: #718096;
        font-weight: 500;
        margin-bottom: 0;
    }

    /* Filter Card */
    .filter-card {
        background: white !important;
        border-radius: 20px;
        box-shadow: 0 10px 30px rgba(0, 0, 0, 0.15);
        border: 2px solid #e2e8f0;
        margin-bottom: 2rem;
        margin-top: 2rem;
        overflow: hidden;
    }

    .filter-header {
        background: linear-gradient(135deg, #f8f9fa, #e9ecef);
        padding: 1.5rem 2rem;
        cursor: pointer;
        transition: all 0.3s ease;
        border-bottom: 1px solid #e9ecef;
    }

    .filter-header:hover {
        background: linear-gradient(135deg, #e9ecef, #dee2e6);
    }

    .filter-toggle {
        transition: transform 0.3s ease;
    }

    .filter-header[aria-expanded="false"] .filter-toggle {
        transform: rotate(180deg);
    }

    .filter-body {
        padding: 2rem;
    }

    .form-label {
        font-weight: 600;
        color: #2d3748;
        margin-bottom: 0.5rem;
    }

    .modern-input, .modern-select {
        border: 2px solid #e2e8f0;
        border-radius: 12px;
        padding: 0.75rem 1rem;
        transition: all 0.3s ease;
        background: #f8f9fa;
    }

    .modern-input:focus, .modern-select:focus {
        border-color: #667eea;
        box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);
        background: white;
    }

    .modern-btn {
        border-radius: 12px;
        padding: 0.75rem 1.5rem;
        font-weight: 600;
        transition: all 0.3s ease;
        border: none;
        background: linear-gradient(135deg, #667eea, #764ba2);
    }

    .modern-btn:hover {
        transform: translateY(-2px);
        box-shadow: 0 10px 20px rgba(102, 126, 234, 0.3);
    }

    /* Clients Section */
    .clients-section {
        background: white !important;
        border-radius: 20px;
        padding: 2rem;
        box-shadow: 0 10px 30px rgba(0, 0, 0, 0.15);
        border: 2px solid #e2e8f0;
        margin-bottom: 2rem;
    }

    .section-title {
        color: #2d3748;
        font-weight: 700;
        margin-bottom: 0;
    }

    /* Client Cards */
    .client-card {
        background: white;
        border-radius: 16px;
        box-shadow: 0 4px 20px rgba(0,0,0,0.08);
        border: 1px solid #e2e8f0;
        transition: all 0.3s ease;
        overflow: hidden;
        height: 100%;
    }

    .client-card:hover {
        transform: translateY(-5px);
        box-shadow: 0 15px 35px rgba(0,0,0,0.15);
    }

    .client-card-header {
        padding: 1.5rem 1.5rem 1rem;
        display: flex;
        align-items: flex-start;
        justify-content: space-between;
    }

    .client-avatar {
        width: 50px;
        height: 50px;
        border-radius: 12px;
        background: linear-gradient(135deg, #667eea, #764ba2);
        display: flex;
        align-items: center;
        justify-content: center;
        color: white;
        font-size: 1.5rem;
        margin-right: 1rem;
    }

    .client-info {
        flex: 1;
    }

    .client-name {
        font-weight: 600;
        color: #2d3748;
        margin-bottom: 0.25rem;
    }

    .status-badge {
        padding: 0.25rem 0.75rem;
        border-radius: 20px;
        font-size: 0.75rem;
        font-weight: 600;
        text-transform: uppercase;
        letter-spacing: 0.5px;
    }

    .client-card-body {
        padding: 0 1.5rem 1rem;
    }

    .client-details {
        margin-bottom: 1rem;
    }

    .detail-item {
        display: flex;
        align-items: center;
        margin-bottom: 0.5rem;
        font-size: 0.9rem;
    }

    .detail-item i {
        width: 16px;
        margin-right: 0.5rem;
    }

    .tracking-number {
        font-family: 'Courier New', monospace;
        font-weight: 600;
        color: #667eea;
    }

    .urgency-badge {
        display: inline-block;
        padding: 0.25rem 0.75rem;
        border-radius: 20px;
        font-size: 0.75rem;
        font-weight: 600;
        text-transform: uppercase;
        letter-spacing: 0.5px;
    }

    .client-card-footer {
        padding: 1rem 1.5rem 1.5rem;
        border-top: 1px solid #e2e8f0;
    }

    /* List View */
    .list-view-container {
        background: #f8f9fa !important;
        border-radius: 16px;
        padding: 1rem;
        border: 1px solid #e2e8f0;
    }

    .list-item {
        background: white !important;
        border-radius: 12px;
        padding: 1.5rem;
        margin-bottom: 1rem;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
        transition: all 0.3s ease;
        border: 2px solid #e2e8f0;
    }

    .list-item:hover {
        transform: translateX(5px);
        box-shadow: 0 8px 25px rgba(0,0,0,0.1);
    }

    .list-item:last-child {
        margin-bottom: 0;
    }

    .project-type-badge {
        color: #667eea;
        font-weight: 500;
    }

    /* Empty State */
    .empty-state {
        text-align: center;
        padding: 4rem 2rem;
    }

    .empty-state-icon {
        font-size: 4rem;
        color: #cbd5e0;
        margin-bottom: 1rem;
    }

    .empty-state-content h5 {
        color: #2d3748;
        margin-bottom: 0.5rem;
    }

    /* Badge Colors */
    .bg-primary { background: linear-gradient(135deg, #667eea, #764ba2) !important; }
    .bg-warning { background: linear-gradient(135deg, #f093fb, #f5576c) !important; }
    .bg-info { background: linear-gradient(135deg, #4facfe, #00f2fe) !important; }
    .bg-success { background: linear-gradient(135deg, #43e97b, #38f9d7) !important; }
    .bg-danger { background: linear-gradient(135deg, #ff6b6b, #ee5a52) !important; }
    .bg-secondary { background: linear-gradient(135deg, #a8a8a8, #8e8e8e) !important; }
    .bg-dark { background: linear-gradient(135deg, #2d3748, #1a202c) !important; }

    /* Modal Enhancements */
    .modal-xl {
        max-width: 95%;
    }

    .modal-content {
        border-radius: 20px;
        border: none;
        box-shadow: 0 25px 50px rgba(0,0,0,0.25);
    }

    .modal-header {
        border-radius: 20px 20px 0 0;
        background: linear-gradient(135deg, #667eea, #764ba2);
    }

    /* Responsive Design */
    @@media (max-width: 768px) {
        .hero-title {
            font-size: 2rem;
        }

        .hero-actions {
            margin-top: 2rem;
        }

        .monitoring-container {
            margin-top: 0px;
            padding-top: 1rem;
        }

        .monitoring-hero-section {
            padding: 3rem 0 4rem 0;
        }

        .stat-card {
            padding: 1.5rem;
        }

        .stat-number {
            font-size: 2rem;
        }

        .filter-body {
            padding: 1.5rem;
        }

        .clients-section {
            padding: 1.5rem;
        }

        .client-card-header {
            flex-direction: column;
            align-items: flex-start;
        }

        .client-avatar {
            margin-bottom: 1rem;
        }

        .list-item {
            padding: 1rem;
        }

        .modal-xl {
            max-width: 98%;
        }
    }

    /* Animation Classes */
    .fade-in {
        animation: fadeIn 0.6s ease-in-out;
    }

    @@keyframes fadeIn {
        from {
            opacity: 0;
            transform: translateY(20px);
        }
        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    /* Dark Mode Support */
    @@media (prefers-color-scheme: dark) {
        .stat-card, .filter-card, .clients-section, .client-card, .list-item {
            background: #1a202c;
            color: #e2e8f0;
        }

        .section-title, .client-name {
            color: #e2e8f0;
        }

        .modern-input, .modern-select {
            background: #2d3748;
            border-color: #4a5568;
            color: #e2e8f0;
        }

        .list-view-container {
            background: #2d3748;
        }
    }
</style>
