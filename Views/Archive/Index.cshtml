@model PaginatedList<TestingDemo.Models.ClientModel>
@using TestingDemo.Models

@{
    ViewData["Title"] = "Client Archive";
}

<!-- Hero Section with Gradient Background -->
<div class="archive-hero-section">
    <div class="container-fluid">
        <div class="row align-items-center min-vh-25">
            <div class="col-12 text-center text-white">
                <div class="hero-content">
                    <h1 class="display-4 fw-bold mb-3 animate-fade-in">
                        <i class="bi bi-archive-fill me-3"></i>Client Archive
                    </h1>
                    <p class="lead mb-4 animate-fade-in-delay">Comprehensive repository of completed client projects and historical records</p>
                    <div class="archive-stats animate-fade-in-delay-2">
                        <div class="row justify-content-center">
                            <div class="col-auto">
                                <div class="stat-item">
                                    <h3 class="mb-0 fw-bold">@Model.TotalCount</h3>
                                    <small>Total Archived</small>
                                </div>
                            </div>
                            <div class="col-auto">
                                <div class="stat-item">
                                    <h3 class="mb-0 fw-bold">@Model.Count(m => m.TypeOfProject == "Retainership - BIR")</h3>
                                    <small>BIR Projects</small>
                                </div>
                            </div>
                            <div class="col-auto">
                                <div class="stat-item">
                                    <h3 class="mb-0 fw-bold">@Model.Count(m => m.TypeOfProject == "Retainership - SPP")</h3>
                                    <small>SPP Projects</small>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="container-fluid archive-container">
    <!-- Advanced Filter Section -->
    <div class="row mb-5">
        <div class="col-12">
            <div class="filter-card">
                <div class="filter-header">
                    <h5 class="mb-0">
                        <i class="bi bi-funnel-fill me-2"></i>Advanced Search & Filter
                    </h5>
                    <button class="btn btn-link p-0" type="button" data-bs-toggle="collapse" data-bs-target="#filterCollapse" aria-expanded="true">
                        <i class="bi bi-chevron-up"></i>
                    </button>
                </div>
                <div class="collapse show" id="filterCollapse">
                    <div class="filter-body">
                        <form asp-action="Index" method="get" class="row g-3">
                            <div class="col-12 col-md-4">
                                <label class="form-label fw-semibold">
                                    <i class="bi bi-person me-1"></i>Client Name
                                </label>
                                <div class="input-group">
                                    <span class="input-group-text bg-white border-end-0">
                                        <i class="bi bi-search text-muted"></i>
                                    </span>
                                    <input type="text" name="SearchString" value="@ViewData["CurrentFilter"]"
                                        class="form-control border-start-0" placeholder="Search by client name...">
                                </div>
                            </div>
                            <div class="col-12 col-md-3">
                                <label class="form-label fw-semibold">
                                    <i class="bi bi-briefcase me-1"></i>Project Type
                                </label>
                                @{
                                    var typeOfProject = Context.Request.Query["TypeOfProject"].ToString();
                                    var projectTypes = new[] { "Retainership - BIR", "Retainership - SPP", "One Time Transaction", "External Audit", "Other" };
                                }
                                <select name="TypeOfProject" class="form-select">
                                    <option value="">All Project Types</option>
                                    @foreach (var type in projectTypes)
                                    {
                                        <option value="@type" selected="@(typeOfProject == type)">@type</option>
                                    }
                                </select>
                            </div>
                            <div class="col-12 col-md-2">
                                <label class="form-label fw-semibold">
                                    <i class="bi bi-calendar-event me-1"></i>From Date
                                </label>
                                <input type="date" name="CreatedDateFrom" value="@Context.Request.Query["CreatedDateFrom"]"
                                    class="form-control">
                            </div>
                            <div class="col-12 col-md-2">
                                <label class="form-label fw-semibold">
                                    <i class="bi bi-calendar-check me-1"></i>To Date
                                </label>
                                <input type="date" name="CreatedDateTo" value="@Context.Request.Query["CreatedDateTo"]"
                                    class="form-control">
                            </div>
                            <div class="col-12 col-md-1 d-flex align-items-end">
                                <div class="d-grid gap-2 w-100">
                                    <button type="submit" class="btn btn-primary">
                                        <i class="bi bi-search"></i>
                                    </button>
                                    <a asp-action="Index" class="btn btn-outline-secondary">
                                        <i class="bi bi-arrow-clockwise"></i>
                                    </a>
                                </div>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Results Section -->
    <div class="row">
        <div class="col-12">
            @if (Model.Any())
            {
                <!-- View Toggle -->
                <div class="d-flex justify-content-between align-items-center mb-4">
                    <h4 class="mb-0">
                        <i class="bi bi-archive me-2"></i>Archived Projects
                        <span class="badge bg-primary ms-2">@Model.TotalCount</span>
                    </h4>
                    <div class="btn-group" role="group">
                        <button type="button" class="btn btn-outline-primary" id="gridViewBtn">
                            <i class="bi bi-grid-3x3-gap"></i> Grid
                        </button>
                        <button type="button" class="btn btn-outline-primary active" id="listViewBtn">
                            <i class="bi bi-list-ul"></i> List
                        </button>
                    </div>
                </div>

                <!-- Grid View -->
                <div id="gridView" class="row g-4 d-none">
                    @foreach (var item in Model)
                    {
                        <div class="col-12 col-md-6 col-lg-4">
                            <div class="archive-card">
                                <div class="archive-card-header">
                                    <div class="d-flex justify-content-between align-items-start">
                                        <div class="client-info">
                                            <h6 class="client-name mb-1">@item.ClientName</h6>
                                            <small class="text-muted">@item.ContactPersonNumber</small>
                                        </div>
                                        <span class="project-type-badge @GetProjectTypeClass(item.TypeOfProject)">
                                            @Html.Raw(GetProjectTypeIcon(item.TypeOfProject))
                                        </span>
                                    </div>
                                </div>
                                <div class="archive-card-body">
                                    <div class="project-details">
                                        <div class="detail-item">
                                            <i class="bi bi-briefcase text-primary"></i>
                                            <span>@item.TypeOfProject</span>
                                        </div>
                                        <div class="detail-item">
                                            <i class="bi bi-calendar text-success"></i>
                                            <span>@item.CreatedDate.ToString("MMM dd, yyyy")</span>
                                        </div>
                                        <div class="detail-item">
                                            <i class="bi bi-check-circle text-info"></i>
                                            <span>@item.Status</span>
                                        </div>
                                    </div>
                                </div>
                                <div class="archive-card-footer">
                                    <button type="button" class="btn btn-primary btn-sm w-100" 
                                        onclick="viewArchiveDetails(@item.Id)">
                                        <i class="bi bi-eye me-1"></i>View Details
                                    </button>
                                </div>
                            </div>
                        </div>
                    }
                </div>

                <!-- List View -->
                <div id="listView">
                    <div class="list-view-container">
                        <div class="list-header">
                            <div class="row fw-bold text-muted small">
                                <div class="col-md-4">Client Information</div>
                                <div class="col-md-2">Project Type</div>
                                <div class="col-md-2">Archived Date</div>
                                <div class="col-md-2">Status</div>
                                <div class="col-md-2 text-center">Actions</div>
                            </div>
                        </div>
                        <div class="list-body">
                            @foreach (var item in Model)
                            {
                                <div class="list-item">
                                    <div class="row align-items-center">
                                        <div class="col-md-4">
                                            <div class="d-flex align-items-center">
                                                <div class="client-avatar me-3">
                                                    <i class="bi bi-person-circle"></i>
                                                </div>
                                                <div>
                                                    <h6 class="mb-0">@item.ClientName</h6>
                                                    <small class="text-muted">@item.ContactPersonNumber</small>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-md-2">
                                            <span class="project-type-badge @GetProjectTypeClass(item.TypeOfProject)">
                                                @Html.Raw(GetProjectTypeIcon(item.TypeOfProject)) @item.TypeOfProject
                                            </span>
                                        </div>
                                        <div class="col-md-2">
                                            <span class="text-muted">@item.CreatedDate.ToString("MMM dd, yyyy")</span>
                                        </div>
                                        <div class="col-md-2">
                                            <span class="badge bg-success">@item.Status</span>
                                        </div>
                                        <div class="col-md-2 text-center">
                                            <button type="button" class="btn btn-outline-primary btn-sm" 
                                                onclick="viewArchiveDetails(@item.Id)" title="View Details">
                                                <i class="bi bi-eye"></i>
                                            </button>
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                </div>

                <!-- Pagination -->
                <div class="pagination-container">
                    <nav aria-label="Archive pagination">
                        @{
                            var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
                            var nextDisabled = !Model.HasNextPage ? "disabled" : "";
                        }
                        <ul class="pagination justify-content-center">
                            <li class="page-item @prevDisabled">
                                <a asp-action="Index" asp-route-sortOrder="@ViewData["CurrentSort"]"
                                    asp-route-pageNumber="@(Model.PageIndex - 1)"
                                    asp-route-currentFilter="@ViewData["CurrentFilter"]" 
                                    class="page-link">
                                    <i class="bi bi-chevron-left"></i> Previous
                                </a>
                            </li>
                            
                            @for (int i = Math.Max(1, Model.PageIndex - 2); i <= Math.Min(Model.TotalPages, Model.PageIndex + 2); i++)
                            {
                                <li class="page-item @(i == Model.PageIndex ? "active" : "")">
                                    <a asp-action="Index" asp-route-sortOrder="@ViewData["CurrentSort"]"
                                        asp-route-pageNumber="@i"
                                        asp-route-currentFilter="@ViewData["CurrentFilter"]" 
                                        class="page-link">@i</a>
                                </li>
                            }
                            
                            <li class="page-item @nextDisabled">
                                <a asp-action="Index" asp-route-sortOrder="@ViewData["CurrentSort"]"
                                    asp-route-pageNumber="@(Model.PageIndex + 1)"
                                    asp-route-currentFilter="@ViewData["CurrentFilter"]" 
                                    class="page-link">
                                    Next <i class="bi bi-chevron-right"></i>
                                </a>
                            </li>
                        </ul>
                    </nav>
                </div>
            }
            else
            {
                <!-- Empty State -->
                <div class="empty-state">
                    <div class="empty-state-icon">
                        <i class="bi bi-archive"></i>
                    </div>
                    <h4 class="empty-state-title">No Archived Clients Found</h4>
                    <p class="empty-state-description">
                        There are currently no archived clients matching your search criteria.
                    </p>
                    <a asp-action="Index" class="btn btn-primary">
                        <i class="bi bi-arrow-clockwise me-1"></i>Clear Filters
                    </a>
                </div>
            }
        </div>
    </div>
</div>

<!-- Archive Details Modal -->
<div class="modal fade" id="archiveDetailsModal" tabindex="-1" aria-labelledby="archiveDetailsModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-xl modal-dialog-scrollable">
        <div class="modal-content border-0 shadow">
            <div class="modal-header bg-primary text-white border-0 py-3">
                <h5 class="modal-title d-flex flex-wrap align-items-center gap-3 mb-0">
                    <i class="bi bi-archive-fill fs-4"></i>
                    <span class="fw-bold" id="modalClientName">Client Details</span>
                    <span class="badge bg-light text-primary rounded-pill fs-6" id="modalProjectType">Project Type</span>
                </h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body p-4" id="archiveDetailsContent">
                <!-- Content will be loaded here -->
                <div class="text-center py-4">
                    <div class="spinner-border text-primary" role="status">
                        <span class="visually-hidden">Loading...</span>
                    </div>
                    <p class="mt-3 text-muted">Loading client details...</p>
                </div>
            </div>
            <div class="modal-footer bg-light">
                <button type="button" class="btn btn-outline-secondary" data-bs-dismiss="modal">
                    <i class="bi bi-x-circle me-1"></i>Close
                </button>
            </div>
        </div>
    </div>
</div>

<audio id="notifySound" src="/sounds/Notifications.mp3" preload="auto"></audio>

@section Scripts {
    <script>
        // View Toggle Functionality
        document.addEventListener('DOMContentLoaded', function() {
            const gridViewBtn = document.getElementById('gridViewBtn');
            const listViewBtn = document.getElementById('listViewBtn');
            const gridView = document.getElementById('gridView');
            const listView = document.getElementById('listView');

            gridViewBtn.addEventListener('click', function() {
                gridViewBtn.classList.add('active');
                listViewBtn.classList.remove('active');
                gridView.classList.remove('d-none');
                listView.classList.add('d-none');
            });

            listViewBtn.addEventListener('click', function() {
                listViewBtn.classList.add('active');
                gridViewBtn.classList.remove('active');
                listView.classList.remove('d-none');
                gridView.classList.add('d-none');
            });

            // Animate cards on load (only if grid view is visible)
            const cards = document.querySelectorAll('.archive-card');
            if (cards.length > 0 && !gridView.classList.contains('d-none')) {
                cards.forEach((card, index) => {
                    card.style.opacity = '0';
                    card.style.transform = 'translateY(20px)';
                    setTimeout(() => {
                        card.style.transition = 'all 0.5s ease';
                        card.style.opacity = '1';
                        card.style.transform = 'translateY(0)';
                    }, index * 100);
                });
            }
        });

        // Archive Details Modal Function
        function viewArchiveDetails(clientId) {
            // Show modal
            const modal = new bootstrap.Modal(document.getElementById('archiveDetailsModal'));
            modal.show();

            // Update modal title
            document.getElementById('modalClientName').textContent = 'Loading...';
            document.getElementById('modalProjectType').textContent = 'Loading...';

            // Fetch client details
            fetch(`/Archive/GetClientDetails/${clientId}`)
                .then(response => response.json())
                .then(client => {
                    // Update modal title
                    document.getElementById('modalClientName').textContent = client.clientName;
                    document.getElementById('modalProjectType').textContent = client.typeOfProject;

                    // Create detailed content
                    const content = `
                        <div class="row g-4 mb-4">
                            <div class="col-12">
                                <div class="d-flex align-items-center mb-3">
                                    <div class="bg-primary bg-opacity-10 rounded-circle d-flex align-items-center justify-content-center me-3"
                                        style="width: 40px; height: 40px;">
                                        <i class="bi bi-info-circle text-primary fs-5"></i>
                                    </div>
                                    <h6 class="fw-bold mb-0 text-primary">Client Information</h6>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="bg-light rounded-3 p-3 h-100 border-start border-4 border-primary">
                                    <small class="text-muted d-block mb-2 fw-medium">Tracking Number</small>
                                    <span class="text-monospace fw-bold fs-6 text-dark">${client.trackingNumber}</span>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="bg-light rounded-3 p-3 h-100 border-start border-4 border-success">
                                    <small class="text-muted d-block mb-2 fw-medium">Archived Date</small>
                                    <span class="fw-bold fs-6 text-dark">${client.createdDate}</span>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="bg-light rounded-3 p-3 h-100 border-start border-4 border-info">
                                    <small class="text-muted d-block mb-2 fw-medium">Contact Number</small>
                                    <span class="fw-bold fs-6 text-dark">${client.contactPersonNumber || 'N/A'}</span>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="bg-light rounded-3 p-3 h-100 border-start border-4 border-warning">
                                    <small class="text-muted d-block mb-2 fw-medium">Email</small>
                                    <span class="fw-bold fs-6 text-dark">${client.contactPersonEmailAddress || 'N/A'}</span>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="bg-light rounded-3 p-3 h-100 border-start border-4 border-secondary">
                                    <small class="text-muted d-block mb-2 fw-medium">Client Type</small>
                                    <span class="fw-bold fs-6 text-dark">${client.clientType || 'N/A'}</span>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="bg-light rounded-3 p-3 h-100 border-start border-4 border-secondary">
                                    <small class="text-muted d-block mb-2 fw-medium">Tax ID</small>
                                    <span class="fw-bold fs-6 text-dark">${client.taxId || 'N/A'}</span>
                                </div>
                            </div>
                            ${client.registeredCompanyName ? `
                            <div class="col-md-6">
                                <div class="bg-light rounded-3 p-3 h-100 border-start border-4 border-secondary">
                                    <small class="text-muted d-block mb-2 fw-medium">Company Name</small>
                                    <span class="fw-bold fs-6 text-dark">${client.registeredCompanyName}</span>
                                </div>
                            </div>
                            ` : ''}
                            ${client.registeredCompanyAddress ? `
                            <div class="col-12">
                                <div class="bg-light rounded-3 p-3 border-start border-4 border-secondary">
                                    <small class="text-muted d-block mb-2 fw-medium">Company Address</small>
                                    <span class="fw-bold fs-6 text-dark">${client.registeredCompanyAddress}</span>
                                </div>
                            </div>
                            ` : ''}
                        </div>

                        <hr class="my-4 opacity-25" />

                        <div class="row g-4 mb-4">
                            <div class="col-12">
                                <div class="d-flex align-items-center mb-3">
                                    <div class="bg-success bg-opacity-10 rounded-circle d-flex align-items-center justify-content-center me-3"
                                        style="width: 40px; height: 40px;">
                                        <i class="bi bi-project-diagram text-success fs-5"></i>
                                    </div>
                                    <h6 class="fw-bold mb-0 text-success">Project Information</h6>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="bg-light rounded-3 p-3 h-100 border-start border-4 border-primary">
                                    <small class="text-muted d-block mb-2 fw-medium">Project Type</small>
                                    <span class="fw-bold fs-6 text-dark">${client.typeOfProject}</span>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="bg-light rounded-3 p-3 h-100 border-start border-4 border-warning">
                                    <small class="text-muted d-block mb-2 fw-medium">Urgency Level</small>
                                    <span class="badge ${getUrgencyBadgeClass(client.urgencyLevel)}">${client.urgencyLevel}</span>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="bg-light rounded-3 p-3 h-100 border-start border-4 border-info">
                                    <small class="text-muted d-block mb-2 fw-medium">Status</small>
                                    <span class="badge ${getStatusBadgeClass(client.status)}">${client.status}</span>
                                </div>
                            </div>
                            ${client.otherTypeOfProject ? `
                            <div class="col-md-6">
                                <div class="bg-light rounded-3 p-3 h-100 border-start border-4 border-secondary">
                                    <small class="text-muted d-block mb-2 fw-medium">Other Project Type</small>
                                    <span class="fw-bold fs-6 text-dark">${client.otherTypeOfProject}</span>
                                </div>
                            </div>
                            ` : ''}
                        </div>

                        ${getProjectSpecificDetails(client)}
                        ${getRequirementsDetails(client.requirements)}
                    `;
                    
                    document.getElementById('archiveDetailsContent').innerHTML = content;
                })
                .catch(error => {
                    console.error('Error fetching archive details:', error);
                    document.getElementById('archiveDetailsContent').innerHTML = `
                        <div class="alert alert-danger">
                            <i class="bi bi-exclamation-triangle me-2"></i>
                            Error loading client details. Please try again.
                        </div>
                    `;
                });
        }

        // Helper functions for modal
        function getProjectSpecificDetails(client) {
            let details = '<hr><div class="row"><div class="col-12"><h6 class="text-primary"><i class="bi bi-file-earmark-text"></i> Project-Specific Details</h6>';
            
            if (client.retainershipBIR) {
                details += '<div class="alert alert-info"><strong>Retainership BIR Details:</strong><br>';
                details += `<strong>Type of Registrant:</strong> ${client.retainershipBIR.typeOfRegistrant || 'N/A'}<br>`;
                details += `<strong>OCN Notes:</strong> ${client.retainershipBIR.ocnNotes || 'N/A'}<br>`;
                details += `<strong>Date OCN Generated:</strong> ${client.retainershipBIR.dateOCNGenerated || 'N/A'}<br>`;
                details += `<strong>Date BIR Registration:</strong> ${client.retainershipBIR.dateBIRRegistration || 'N/A'}<br>`;
                details += `<strong>BIR RDO No:</strong> ${client.retainershipBIR.birRdoNo || 'N/A'}<br>`;
                details += `<strong>Tax Filing Status:</strong> ${client.retainershipBIR.taxFilingStatus || 'N/A'}<br>`;
                details += `<strong>Need Catch-Up Accounting:</strong> ${client.retainershipBIR.needCatchUpAccounting || 'N/A'}<br>`;
                details += `<strong>Retainership Start Date:</strong> ${client.retainershipBIR.birRetainershipStartDate || 'N/A'}`;
                details += '</div>';
            }
            if (client.retainershipSPP) {
                details += '<div class="alert alert-info"><strong>Retainership SPP Details:</strong><br>';
                details += `<strong>SSS Reg No:</strong> ${client.retainershipSPP.sssCompanyRegNo || 'N/A'}<br>`;
                details += `<strong>SSS Reg Date:</strong> ${client.retainershipSPP.sssRegistrationDate || 'N/A'}<br>`;
                details += `<strong>PHIC Reg No:</strong> ${client.retainershipSPP.phicCompanyRegNo || 'N/A'}<br>`;
                details += `<strong>PHIC Reg Date:</strong> ${client.retainershipSPP.phicRegistrationDate || 'N/A'}<br>`;
                details += `<strong>HDMF Reg No:</strong> ${client.retainershipSPP.hdmfCompanyRegNo || 'N/A'}<br>`;
                details += `<strong>HDMF Reg Date:</strong> ${client.retainershipSPP.hdmfRegistrationDate || 'N/A'}<br>`;
                details += `<strong>Retainership Start Date:</strong> ${client.retainershipSPP.sppRetainershipStartDate || 'N/A'}`;
                details += '</div>';
            }
            if (client.oneTimeTransaction) {
                details += '<div class="alert alert-info"><strong>One-Time Transaction Details:</strong><br>';
                details += `<strong>Type of Registrant:</strong> ${client.oneTimeTransaction.typeOfRegistrant || 'N/A'}<br>`;
                details += `<strong>Area of Services:</strong> ${client.oneTimeTransaction.areaOfServices || 'N/A'}<br>`;
                details += `<strong>Other Area of Services:</strong> ${client.oneTimeTransaction.otherAreaOfServices || 'N/A'}`;
                details += '</div>';
            }
            if (client.externalAudit) {
                details += '<div class="alert alert-info"><strong>External Audit Details:</strong><br>';
                details += `<strong>Audit Status:</strong> ${client.externalAudit.externalAuditStatus || 'N/A'}<br>`;
                details += `<strong>Purposes:</strong> ${client.externalAudit.externalAuditPurposes || 'N/A'}<br>`;
                details += `<strong>Other Purpose:</strong> ${client.externalAudit.externalAuditOtherPurpose || 'N/A'}<br>`;
                details += `<strong>Report Date:</strong> ${client.externalAudit.externalAuditReportDate || 'N/A'}`;
                details += '</div>';
            }
            
            if (!client.retainershipBIR && !client.retainershipSPP && !client.oneTimeTransaction && !client.externalAudit) {
                details += '<div class="alert alert-warning">No additional project-specific details available</div>';
            }
            
            details += '</div></div>';
            return details;
        }

        function getRequirementsDetails(requirements) {
            if (!requirements || requirements.length === 0) {
                return '<hr><div class="row"><div class="col-12"><h6 class="text-primary"><i class="bi bi-list-check"></i> Permit Requirements</h6><div class="alert alert-warning">No requirements found for this client.</div></div></div>';
            }

            let details = '<hr><div class="row"><div class="col-12"><h6 class="text-primary"><i class="bi bi-list-check"></i> Permit Requirements</h6>';
            details += '<div class="table-responsive"><table class="table table-striped table-hover">';
            details += '<thead class="table-dark"><tr><th>Requirement Name</th><th>Description</th><th>Required</th><th>Completed</th><th>Present</th><th>Created Date</th></tr></thead><tbody>';
            
            requirements.forEach(req => {
                const requiredBadge = req.isRequired ? '<span class="badge bg-danger">Required</span>' : '<span class="badge bg-secondary">Optional</span>';
                const completedBadge = req.isCompleted ? '<span class="badge bg-success">Yes</span>' : '<span class="badge bg-warning">No</span>';
                const presentBadge = req.isPresent ? '<span class="badge bg-success">Yes</span>' : '<span class="badge bg-warning">No</span>';
                
                details += `<tr>
                    <td><strong>${req.requirementName}</strong></td>
                    <td>${req.description}</td>
                    <td>${requiredBadge}</td>
                    <td>${completedBadge}</td>
                    <td>${presentBadge}</td>
                    <td>${req.createdDate}</td>
                </tr>`;
            });
            
            details += '</tbody></table></div></div></div>';
            return details;
        }

        function getStatusBadgeClass(status) {
            const statusClasses = {
                'Pending': 'bg-warning',
                'Finance': 'bg-primary',
                'Planning': 'bg-info',
                'Liaison': 'bg-secondary',
                'Received': 'bg-success',
                'DocumentOfficer': 'bg-dark',
                'Clearance': 'bg-success',
                'Archived': 'bg-secondary'
            };
            return statusClasses[status] || 'bg-secondary';
        }

        function getUrgencyBadgeClass(urgency) {
            const urgencyClasses = {
                'High': 'bg-danger',
                'Normal': 'bg-warning',
                'Low': 'bg-success'
            };
            return urgencyClasses[urgency] || 'bg-secondary';
        }

        // Store initial client IDs for Archive table
        let archiveClientIds = Array.from(document.querySelectorAll('.archive-card')).map(card => {
            const link = card.querySelector('a[href*="/Archive/Details/"]');
            return link ? link.href.split('/').pop() : null;
        }).filter(Boolean);

        function playNotifySound() {
            var audio = document.getElementById('notifySound');
            if (audio) {
                audio.currentTime = 0;
                audio.play();
            }
        }

        function renderArchive(data) {
            let newIds = (data.items || []).map(c => c.id?.toString());
            let isNew = newIds.some(id => !archiveClientIds.includes(id));
            if (isNew) {
                playNotifySound();
            }
            location.reload();
        }

        if (window.connection) {
            connection.on("ReceiveUpdate", function (message) {
                fetch('/Archive/GetLatestData')
                    .then(response => response.json())
                    .then(data => {
                        renderArchive(data);
                    });
            });
        }
    </script>
}

@functions {
    public string GetProjectTypeClass(string projectType)
    {
        return projectType switch
        {
            "Retainership - BIR" => "bg-danger",
            "Retainership - SPP" => "bg-info",
            "One Time Transaction" => "bg-secondary",
            "External Audit" => "bg-dark",
            _ => "bg-light text-dark"
        };
    }

    public string GetProjectTypeIcon(string projectType)
    {
        return projectType switch
        {
            "Retainership - BIR" => "<i class='bi bi-building'></i>",
            "Retainership - SPP" => "<i class='bi bi-people'></i>",
            "One Time Transaction" => "<i class='bi bi-arrow-repeat'></i>",
            "External Audit" => "<i class='bi bi-search'></i>",
            _ => "<i class='bi bi-file-earmark'></i>"
        };
    }
}

<style>
    /* Hero Section */
    .archive-hero-section {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        position: relative;
        overflow: hidden;
    }

    .archive-hero-section::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100"><defs><pattern id="grain" width="100" height="100" patternUnits="userSpaceOnUse"><circle cx="25" cy="25" r="1" fill="white" opacity="0.1"/><circle cx="75" cy="75" r="1" fill="white" opacity="0.1"/><circle cx="50" cy="10" r="0.5" fill="white" opacity="0.1"/><circle cx="10" cy="60" r="0.5" fill="white" opacity="0.1"/><circle cx="90" cy="40" r="0.5" fill="white" opacity="0.1"/></pattern></defs><rect width="100" height="100" fill="url(%23grain)"/></svg>');
        opacity: 0.3;
    }

    .min-vh-25 {
        min-height: 25vh;
    }

    .hero-content {
        position: relative;
        z-index: 2;
    }

    .archive-stats {
        margin-top: 2rem;
    }

    .stat-item {
        background: rgba(255, 255, 255, 0.1);
        backdrop-filter: blur(10px);
        border-radius: 15px;
        padding: 1.5rem;
        margin: 0 0.5rem;
        border: 1px solid rgba(255, 255, 255, 0.2);
        transition: all 0.3s ease;
    }

    .stat-item:hover {
        transform: translateY(-5px);
        background: rgba(255, 255, 255, 0.15);
    }

    /* Animations */
    .animate-fade-in {
        animation: fadeInUp 1s ease-out;
    }

    .animate-fade-in-delay {
        animation: fadeInUp 1s ease-out 0.3s both;
    }

    .animate-fade-in-delay-2 {
        animation: fadeInUp 1s ease-out 0.6s both;
    }

        @@keyframes fadeInUp {
        from {
            opacity: 0;
            transform: translateY(30px);
        }
        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    /* Container */
    .archive-container {
        margin-top: -10px;
        position: relative;
        z-index: 3;
        padding-bottom: 2rem;
        padding-top: 2rem;
    }

    /* Filter Card */
    .filter-card {
        background: white;
        border-radius: 20px;
        box-shadow: 0 10px 40px rgba(0, 0, 0, 0.1);
        border: none;
        overflow: hidden;
        transition: all 0.3s ease;
    }

    .filter-card:hover {
        box-shadow: 0 20px 60px rgba(0, 0, 0, 0.15);
        transform: translateY(-2px);
    }

    .filter-header {
        background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
        padding: 1.5rem;
        border-bottom: 1px solid #dee2e6;
        display: flex;
        justify-content: between;
        align-items: center;
    }

    .filter-body {
        padding: 2rem;
    }

    /* Archive Cards */
    .archive-card {
        background: white;
        border-radius: 20px;
        box-shadow: 0 5px 20px rgba(0, 0, 0, 0.08);
        border: none;
        overflow: hidden;
        transition: all 0.3s ease;
        height: 100%;
        display: flex;
        flex-direction: column;
    }

    .archive-card:hover {
        transform: translateY(-10px);
        box-shadow: 0 20px 40px rgba(0, 0, 0, 0.15);
    }

    .archive-card-header {
        padding: 1.5rem 1.5rem 1rem;
        background: linear-gradient(135deg, #f8f9fa 0%, #ffffff 100%);
        border-bottom: 1px solid #f1f3f4;
    }

    .client-name {
        font-weight: 600;
        color: #2c3e50;
        font-size: 1.1rem;
    }

    .project-type-badge {
        padding: 0.5rem 1rem;
        border-radius: 50px;
        font-size: 0.8rem;
        font-weight: 600;
        color: white;
        display: inline-flex;
        align-items: center;
        gap: 0.3rem;
    }

    .archive-card-body {
        padding: 1rem 1.5rem;
        flex-grow: 1;
    }

    .project-details {
        display: flex;
        flex-direction: column;
        gap: 0.8rem;
    }

    .detail-item {
        display: flex;
        align-items: center;
        gap: 0.8rem;
        font-size: 0.9rem;
    }

    .detail-item i {
        width: 20px;
        text-align: center;
    }

    .archive-card-footer {
        padding: 1rem 1.5rem 1.5rem;
        background: #f8f9fa;
    }

    /* List View */
    .list-view-container {
        background: white;
        border-radius: 20px;
        box-shadow: 0 5px 20px rgba(0, 0, 0, 0.08);
        overflow: hidden;
    }

    .list-header {
        background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
        padding: 1.5rem;
        border-bottom: 2px solid #dee2e6;
    }

    .list-item {
        padding: 1.5rem;
        border-bottom: 1px solid #f1f3f4;
        transition: all 0.3s ease;
    }

    .list-item:hover {
        background: #f8f9fa;
        transform: translateX(5px);
    }

    .list-item:last-child {
        border-bottom: none;
    }

    .client-avatar {
        font-size: 2rem;
        color: #6c757d;
    }

    /* Pagination */
    .pagination-container {
        margin-top: 3rem;
        padding: 2rem 0;
    }

    .pagination .page-link {
        border: none;
        color: #6c757d;
        padding: 0.75rem 1rem;
        margin: 0 0.25rem;
        border-radius: 10px;
        transition: all 0.3s ease;
    }

    .pagination .page-link:hover {
        background: #667eea;
        color: white;
        transform: translateY(-2px);
    }

    .pagination .page-item.active .page-link {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        color: white;
        box-shadow: 0 5px 15px rgba(102, 126, 234, 0.4);
    }

    /* Empty State */
    .empty-state {
        text-align: center;
        padding: 4rem 2rem;
        background: white;
        border-radius: 20px;
        box-shadow: 0 5px 20px rgba(0, 0, 0, 0.08);
    }

    .empty-state-icon {
        font-size: 4rem;
        color: #6c757d;
        margin-bottom: 1.5rem;
    }

    .empty-state-title {
        color: #2c3e50;
        font-weight: 600;
        margin-bottom: 1rem;
    }

    .empty-state-description {
        color: #6c757d;
        margin-bottom: 2rem;
    }

    /* Button Styles */
    .btn {
        border-radius: 10px;
        font-weight: 500;
        transition: all 0.3s ease;
    }

    .btn-primary {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        border: none;
    }

    .btn-primary:hover {
        transform: translateY(-2px);
        box-shadow: 0 10px 25px rgba(102, 126, 234, 0.4);
    }

    .btn-outline-primary {
        border: 2px solid #667eea;
        color: #667eea;
    }

    .btn-outline-primary:hover,
    .btn-outline-primary.active {
        background: #667eea;
        border-color: #667eea;
        transform: translateY(-2px);
    }

    /* Form Controls */
    .form-control,
    .form-select {
        border-radius: 10px;
        border: 2px solid #e9ecef;
        transition: all 0.3s ease;
    }

    .form-control:focus,
    .form-select:focus {
        border-color: #667eea;
        box-shadow: 0 0 0 0.2rem rgba(102, 126, 234, 0.25);
    }

    .input-group-text {
        border-radius: 10px 0 0 10px;
        border: 2px solid #e9ecef;
        border-right: none;
    }

    .input-group .form-control {
        border-left: none;
        border-radius: 0 10px 10px 0;
    }

    /* Badge Styles */
    .badge {
        border-radius: 50px;
        font-weight: 500;
        padding: 0.5rem 1rem;
    }

    /* Additional spacing and layout fixes */
    .archive-hero-section {
        margin-bottom: 0;
        padding-bottom: 3rem;
    }

    .filter-card {
        margin-bottom: 2rem;
        margin-top: 1rem;
    }

    .list-view-container {
        margin-bottom: 2rem;
    }

    .pagination-container {
        margin-top: 2rem;
        margin-bottom: 2rem;
    }

    /* Modal improvements */
    .modal-xl {
        max-width: 95%;
    }

    .modal-content {
        border-radius: 20px;
    }

    /* Responsive Design */
    @@media (max-width: 768px) {
        .archive-hero-section {
            padding: 2rem 0;
        }

        .hero-content h1 {
            font-size: 2rem;
        }

        .stat-item {
            margin: 0.5rem 0;
        }

        .filter-body {
            padding: 1rem;
        }

        .archive-card {
            margin-bottom: 1rem;
        }

        .list-item {
            padding: 1rem;
        }

        .archive-container {
            margin-top: 0px;
            padding-top: 1rem;
        }

        .archive-hero-section {
            padding-bottom: 2rem;
        }

        .modal-xl {
            max-width: 98%;
        }
    }

    /* Dark mode support */
    @@media (prefers-color-scheme: dark) {
        .filter-card,
        .archive-card,
        .list-view-container,
        .empty-state {
            background: #2c3e50;
            color: #ecf0f1;
        }

        .filter-header {
            background: linear-gradient(135deg, #34495e 0%, #2c3e50 100%);
        }

        .client-name {
            color: #ecf0f1;
        }

        .list-item:hover {
            background: #34495e;
        }
    }
</style>