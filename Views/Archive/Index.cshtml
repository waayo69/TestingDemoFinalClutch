@model PaginatedList<TestingDemo.Models.ClientModel>
@using TestingDemo.Models

@{
    ViewData["Title"] = "Client Archive";
}

@functions {
    public string GetProjectTypeClass(string type)
    {
        if (string.IsNullOrWhiteSpace(type)) return "";
        switch (type.Trim())
        {
            case "Retainership - BIR": return "type-bir";
            case "Retainership - SPP": return "type-spp";
            case "One Time Transaction": return "type-ott";
            case "External Audit": return "type-audit";
            default: return "type-other";
        }
    }

    public string GetProjectTypeIcon(string type)
    {
        if (string.IsNullOrWhiteSpace(type)) return "<i class='bi bi-tag'></i>";
        switch (type.Trim())
        {
            case "Retainership - BIR": return "<i class='bi bi-journal-check'></i>";
            case "Retainership - SPP": return "<i class='bi bi-diagram-3'></i>";
            case "One Time Transaction": return "<i class='bi bi-lightning-charge'></i>";
            case "External Audit": return "<i class='bi bi-clipboard-check'></i>";
            default: return "<i class='bi bi-tag'></i>";
        }
    }
}

<style>
    :root {
        --bg: #ffffff;
        --bg-soft: #f8f9fa;
        --bg-muted: #f4f5f6;
        --text: #222;
        --muted: #6b7280;
        --primary: #2563eb;
        --primary-600: #1d4ed8;
        --primary-100: #dbeafe;
        --success: #16a34a;
        --warning: #f59e0b;
        --danger: #dc2626;
        --info: #0ea5e9;
        --secondary: #6b7280;
        --border: #e5e7eb;
        --shadow: 0 1px 3px rgba(0,0,0,0.08), 0 1px 2px rgba(0,0,0,0.06);
        --radius: 12px;
    }

    /* Base */
    body {
        background: var(--bg);
        color: var(--text);
        font-family: "Segoe UI", system-ui, -apple-system, Roboto, "Helvetica Neue", Arial, "Noto Sans", "Apple Color Emoji", "Segoe UI Emoji";
    }

    .archive-hero-section {
        background: transparent; /* was a gradient */
        padding: 20px 0; /* slightly reduced padding */
        color: inherit; /* no forced white text */
        box-shadow: none; /* remove drop shadow */
        margin-bottom: 16px; /* keep some spacing below */
        border-bottom: 1px solid var(--border); /* subtle separator (optional) */
    }

    .text-muted {
        color: var(--muted);
    }

    .text-white {
        color: #fff;
    }

    .text-primary {
        color: var(--primary);
    }

    .text-success {
        color: var(--success);
    }

    .text-info {
        color: var(--info);
    }

    .small {
        font-size: 0.875rem;
    }

    .fw-bold {
        font-weight: 700;
    }

    .fw-semibold {
        font-weight: 600;
    }

    .fw-medium {
        font-weight: 500;
    }

    .lead {
        font-size: 1.125rem;
        color: var(--muted);
    }

    /* Spacing */
    .mb-0 {
        margin-bottom: 0;
    }

    .mb-1 {
        margin-bottom: 0.25rem;
    }

    .mb-3 {
        margin-bottom: 1rem;
    }

    .mb-4 {
        margin-bottom: 1.25rem;
    }

    .me-1 {
        margin-right: 0.25rem;
    }

    .me-2 {
        margin-right: 0.5rem;
    }

    .me-3 {
        margin-right: 0.75rem;
    }

    .mt-3 {
        margin-top: 1rem;
    }

    .my-4 {
        margin-top: 1.25rem;
        margin-bottom: 1.25rem;
    }

    .gap-2 {
        gap: 0.5rem;
    }

    .gap-3 {
        gap: 0.75rem;
    }

    /* Display/align */
    .d-flex {
        display: flex;
    }

    .d-grid {
        display: grid;
    }

    .w-100 {
        width: 100%;
    }

    .text-center {
        text-align: center;
    }

    .align-items-center {
        align-items: center;
    }

    .align-items-start {
        align-items: flex-start;
    }

    .justify-content-between {
        justify-content: space-between;
    }

    .justify-content-center {
        justify-content: center;
    }

    .min-vh-25 {
        min-height: 25vh;
    }

    .d-none {
        display: none !important;
    }

    /* Grid system (subset) */
    .container-fluid {
        width: 100%;
        max-width: 1200px;
        padding: 0 20px;
        margin: 0 auto;
    }

    .row {
        display: flex;
        flex-wrap: wrap;
        margin-left: -10px;
        margin-right: -10px;
    }

        .row > [class*="col-"] {
            padding: 0 10px;
        }

    .col-12 {
        flex: 0 0 100%;
        max-width: 100%;
    }

    .col-auto {
        flex: 0 0 auto;
        width: auto;
    }

    .col-md-1, .col-md-2, .col-md-3, .col-md-4, .col-md-6, .col-lg-4 {
        flex: 0 0 100%;
        max-width: 100%;
    }

    @@media (min-width: 768px) {
        .col-md-1 {
            flex: 0 0 8.333%;
            max-width: 8.333%;
        }

        .col-md-2 {
            flex: 0 0 16.666%;
            max-width: 16.666%;
        }

        .col-md-3 {
            flex: 0 0 25%;
            max-width: 25%;
        }

        .col-md-4 {
            flex: 0 0 33.333%;
            max-width: 33.333%;
        }

        .col-md-6 {
            flex: 0 0 50%;
            max-width: 50%;
        }
    }

    @@media (min-width: 992px) {
        .col-lg-4 {
            flex: 0 0 33.333%;
            max-width: 33.333%;
        }
    }

    /* Hero */


    .hero-content h1 {
        margin: 0;
        letter-spacing: 0.3px;
    }

    .animate-fade-in {
        animation: fadeInUp 0.5s ease;
    }

    .animate-fade-in-delay {
        animation: fadeInUp 0.6s ease;
    }

    .animate-fade-in-delay-2 {
        animation: fadeInUp 0.7s ease;
    }

    @@keyframes fadeInUp {
        from {
            opacity: 0;
            transform: translateY(8px);
        }

        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    .archive-stats .stat-item {
        background: rgba(255,255,255,0.12);
        border-radius: 10px;
        padding: 10px 14px;
        color: #fff;
    }

    /* Filters */
    .archive-container {
        padding: 10px 0 40px;
    }

    .filter-card {
        background: var(--bg);
        border: 1px solid var(--border);
        border-radius: var(--radius);
        box-shadow: var(--shadow);
        overflow: hidden;
    }

    .filter-header {
        display: flex;
        align-items: center;
        justify-content: space-between;
        padding: 14px 16px;
        background: var(--bg-soft);
        border-bottom: 1px solid var(--border);
    }

    .filter-body {
        padding: 16px;
    }

    .form-label {
        display: block;
        font-size: 0.9rem;
        color: var(--muted);
        margin-bottom: 6px;
    }

    .input-group {
        display: flex;
        align-items: stretch;
        border: 1px solid var(--border);
        border-radius: 10px;
        overflow: hidden;
        background: #fff;
    }

    .input-group-text {
        display: inline-flex;
        align-items: center;
        padding: 8px 10px;
        color: var(--muted);
        background: #fff;
        border-right: 1px solid var(--border);
    }

    .form-control, .form-select, input[type="date"] {
        width: 100%;
        padding: 8px 10px;
        border: 1px solid var(--border);
        border-radius: 10px;
        outline: none;
        background: #fff;
        color: var(--text);
        font-size: 0.95rem;
    }

        .form-control.border-start-0 {
            border-left: 0;
            border-radius: 0 10px 10px 0;
        }

    .form-select {
        appearance: none;
        background-image: none;
    }

    .g-3 {
        row-gap: 12px;
    }

    .g-4 {
        row-gap: 16px;
    }

    /* Buttons */
    .btn {
        display: inline-flex;
        align-items: center;
        justify-content: center;
        gap: 8px;
        border: 1px solid transparent;
        background: #fff;
        color: var(--text);
        padding: 8px 12px;
        border-radius: 999px;
        cursor: pointer;
        font-size: 0.95rem;
        transition: all 0.18s ease;
        text-decoration: none;
    }

        .btn:hover {
            transform: translateY(-1px);
            box-shadow: var(--shadow);
        }

        .btn:active {
            transform: translateY(0);
        }

    .btn-primary {
        background: var(--primary);
        color: #fff;
        border-color: var(--primary);
    }

        .btn-primary:hover {
            background: var(--primary-600);
            border-color: var(--primary-600);
        }

    .btn-outline-secondary {
        background: transparent;
        color: var(--text);
        border-color: var(--border);
    }

        .btn-outline-secondary:hover {
            background: var(--bg-soft);
        }

    .btn-outline-primary {
        background: transparent;
        color: var(--primary);
        border-color: var(--primary);
    }

        .btn-outline-primary:hover {
            background: var(--primary-100);
        }

    .btn-link {
        background: transparent;
        border: none;
        color: var(--text);
        padding: 6px;
        border-radius: 8px;
    }

        .btn-link:hover {
            background: var(--bg-soft);
        }

    .btn-sm {
        padding: 6px 10px;
        font-size: 0.9rem;
    }

    .btn-group {
        display: inline-flex;
        gap: 8px;
        background: var(--bg-soft);
        padding: 6px;
        border-radius: 999px;
    }

        .btn-group .btn {
            border-radius: 999px;
        }

            .btn-group .btn.active {
                background: var(--primary);
                color: #fff;
                border-color: var(--primary);
            }

    /* Badges */
    .badge {
        display: inline-block;
        padding: 4px 10px;
        font-size: 12px;
        border-radius: 999px;
        font-weight: 600;
    }

    .bg-primary {
        background: var(--primary-100);
        color: var(--primary);
    }

    .bg-success {
        background: #d1f7d1;
        color: #267326;
    }

    .bg-warning {
        background: #fff3cd;
        color: #7a6200;
    }

    .bg-danger {
        background: #f8d7da;
        color: #842029;
    }

    .bg-info {
        background: #cff4fc;
        color: #055160;
    }

    .bg-light {
        background: #f1f5f9;
        color: #0f172a;
    }

    .bg-secondary {
        background: #e5e7eb;
        color: #374151;
    }

    /* Cards and lists */
    .archive-card {
        border: 1px solid var(--border);
        border-radius: var(--radius);
        box-shadow: var(--shadow);
        background: #fff;
        overflow: hidden;
    }

    .archive-card-header {
        padding: 12px 14px;
        border-bottom: 1px solid var(--border);
        background: var(--bg-soft);
    }

    .archive-card-body {
        padding: 12px 14px;
    }

    .archive-card-footer {
        padding: 12px 14px;
        border-top: 1px solid var(--border);
        background: #fff;
    }

    .client-info .client-name {
        margin: 0;
        font-weight: 600;
    }

    .project-details {
        display: grid;
        row-gap: 8px;
    }

    .detail-item {
        display: inline-flex;
        align-items: center;
        gap: 8px;
        color: var(--text);
    }

    .list-view-container {
        border: 1px solid var(--border);
        border-radius: var(--radius);
        background: #fff;
        overflow: hidden;
        box-shadow: var(--shadow);
    }

    .list-header {
        padding: 10px 14px;
        background: var(--bg-soft);
        border-bottom: 1px solid var(--border);
    }

    .list-body {
        display: grid;
    }

    .list-item {
        padding: 12px 14px;
        border-bottom: 1px solid var(--border);
        transition: background 0.15s ease;
    }

        .list-item:last-child {
            border-bottom: none;
        }

        .list-item:hover {
            background: #fafafa;
        }

    .client-avatar {
        width: 36px;
        height: 36px;
        border-radius: 50%;
        background: var(--bg-muted);
        color: var(--muted);
        display: inline-flex;
        align-items: center;
        justify-content: center;
        font-size: 20px;
    }

    .project-type-badge {
        display: inline-flex;
        align-items: center;
        gap: 6px;
        background: var(--bg-soft);
        color: var(--text);
        padding: 6px 10px;
        border-radius: 999px;
        border: 1px solid var(--border);
        font-size: 0.875rem;
    }

    /* Pagination */
    .pagination-container {
        margin-top: 16px;
    }

    .pagination {
        list-style: none;
        display: inline-flex;
        gap: 6px;
        padding: 0;
        margin: 0;
    }

    .page-item .page-link {
        display: inline-flex;
        align-items: center;
        justify-content: center;
        padding: 8px 12px;
        border-radius: 8px;
        border: 1px solid var(--border);
        text-decoration: none;
        color: var(--text);
        background: #fff;
        min-width: 40px;
    }

        .page-item .page-link:hover {
            background: var(--bg-soft);
        }

    .page-item.active .page-link {
        background: var(--primary);
        color: #fff;
        border-color: var(--primary);
    }

    .page-item.disabled .page-link {
        opacity: 0.5;
        pointer-events: none;
    }

    /* Empty state */
    .empty-state {
        text-align: center;
        padding: 40px 20px;
        border: 1px dashed var(--border);
        border-radius: var(--radius);
        color: var(--muted);
        background: var(--bg);
    }

    .empty-state-icon {
        width: 64px;
        height: 64px;
        border-radius: 16px;
        background: var(--bg-soft);
        display: inline-flex;
        align-items: center;
        justify-content: center;
        margin-bottom: 12px;
        color: var(--primary);
        font-size: 28px;
        box-shadow: var(--shadow);
    }

    .empty-state-title {
        margin: 6px 0;
        color: var(--text);
    }

    .empty-state-description {
        margin: 0 0 14px;
    }

    /* Alerts for modal content */
    .alert {
        border-radius: 10px;
        padding: 10px 12px;
        border: 1px solid var(--border);
        background: var(--bg-soft);
        color: var(--text);
    }

    .alert-info {
        background: #e6f4ff;
        color: #084d7a;
        border-color: #cde8ff;
    }

    .alert-warning {
        background: #fff7e6;
        color: #7a5a08;
        border-color: #ffe8b3;
    }

    .alert-danger {
        background: #ffe6e6;
        color: #7a0b0b;
        border-color: #ffcaca;
    }

    /* Tables inside modal */
    .table {
        width: 100%;
        border-collapse: collapse;
    }

        .table.table-striped tbody tr:nth-child(odd) {
            background: #fafafa;
        }

        .table.table-hover tbody tr:hover {
            background: #f4f4f4;
        }

        .table thead.table-dark {
            background: #0f172a;
            color: #fff;
        }

        .table td, .table th {
            padding: 8px 10px;
            border-bottom: 1px solid var(--border);
            text-align: left;
        }

    /* Collapse visual */
    [data-bs-toggle="collapse"] {
        cursor: pointer;
    }

    .collapse {
        display: block;
    }

        .collapse.show {
            display: block;
        }

    /* Modal visuals */
    .modal-content {
        border-radius: 14px;
        border: 1px solid var(--border);
    }

    .modal-header {
        padding: 12px 14px;
        border-bottom: 1px solid var(--border);
        background: var(--bg-soft);
    }

    .modal-body {
        padding: 16px;
        background: #fff;
    }

    .modal-footer {
        padding: 12px 14px;
        border-top: 1px solid var(--border);
        background: var(--bg-soft);
    }

    .btn-close {
        width: 28px;
        height: 28px;
        border-radius: 50%;
        border: 1px solid var(--border);
        background: #fff;
        display: inline-flex;
        align-items: center;
        justify-content: center;
    }

        .btn-close::before {
            content: "�";
            font-size: 18px;
            line-height: 1;
        }

    .btn-close-white {
        background: #fff;
        color: #000;
    }

    .bg-opacity-10 {
        opacity: 1;
    }

    .border-0 {
        border: 0;
    }

    .border-start {
        border-left: 1px solid var(--border);
    }

    .border-4 {
        border-width: 4px !important;
    }

    .rounded-3 {
        border-radius: 12px;
    }

    .rounded-circle {
        border-radius: 50%;
    }

    .opacity-25 {
        opacity: 0.25;
    }

    .text-monospace {
        font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", monospace;
    }

    /* Optional type classes (hooks for future styles) */
    .type-bir {
    }

    .type-spp {
    }

    .type-ott {
    }

    .type-audit {
    }

    .type-other {
    }
</style>

<!-- Hero Section -->
<div class="archive-hero-section">
    <div class="container-fluid">
        <div class="row align-items-center min-vh-25">
            <div class="col-12 text-center">
                <div class="hero-content">
                    <h1 class="display-4 fw-bold mb-3 animate-fade-in">
                        <i class="bi bi-archive-fill me-3"></i>Client Archive
                    </h1>
                    <div class="archive-stats animate-fade-in-delay-2">
                        <div class="row justify-content-center">
                            <div class="col-auto">
                                <div class="stat-item">
                                    <h3 class="mb-0 fw-bold">@Model.TotalCount</h3>
                                    <small>Total Archived</small>
                                </div>
                            </div>
                            <div class="col-auto">
                                <div class="stat-item">
                                    <h3 class="mb-0 fw-bold">@Model.Count(m => m.TypeOfProject == "Retainership - BIR")</h3>
                                    <small>BIR Projects</small>
                                </div>
                            </div>
                            <div class="col-auto">
                                <div class="stat-item">
                                    <h3 class="mb-0 fw-bold">@Model.Count(m => m.TypeOfProject == "Retainership - SPP")</h3>
                                    <small>SPP Projects</small>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="container-fluid archive-container">
    <!-- Advanced Filter Section -->
    <div class="row mb-5">
        <div class="col-12">
            <div class="filter-card">
                <div class="filter-header">
                    <h5 class="mb-0">
                        <i class="bi bi-funnel-fill me-2"></i>Advanced Search & Filter
                    </h5>
                    <button class="btn btn-link p-0" type="button" data-bs-toggle="collapse" data-bs-target="#filterCollapse" aria-expanded="true">
                        <i class="bi bi-chevron-up"></i>
                    </button>
                </div>
                <div class="collapse show" id="filterCollapse">
                    <div class="filter-body">
                        <form asp-action="Index" method="get" class="row g-3">
                            <div class="col-12 col-md-4">
                                <label class="form-label fw-semibold">
                                    <i class="bi bi-person me-1"></i>Client Name
                                </label>
                                <div class="input-group">
                                    <span class="input-group-text">
                                        <i class="bi bi-search text-muted"></i>
                                    </span>
                                    <input type="text" name="SearchString" value="@ViewData["CurrentFilter"]"
                                           class="form-control border-start-0" placeholder="Search by client name...">
                                </div>
                            </div>
                            <div class="col-12 col-md-3">
                                <label class="form-label fw-semibold">
                                    <i class="bi bi-briefcase me-1"></i>Project Type
                                </label>
                                @{
                                    var typeOfProject = Context.Request.Query["TypeOfProject"].ToString();
                                    var projectTypes = new[] { "Retainership - BIR", "Retainership - SPP", "One Time Transaction", "External Audit", "Other" };
                                }
                                <select name="TypeOfProject" class="form-select">
                                    <option value="">All Project Types</option>
                                    @foreach (var type in projectTypes)
                                    {
                                        <option value="@type" selected="@(typeOfProject == type)">@type</option>
                                    }
                                </select>
                            </div>
                            <div class="col-12 col-md-2">
                                <label class="form-label fw-semibold">
                                    <i class="bi bi-calendar-event me-1"></i>From Date
                                </label>
                                <input type="date" name="CreatedDateFrom" value="@Context.Request.Query["CreatedDateFrom"]"
                                       class="form-control">
                            </div>
                            <div class="col-12 col-md-2">
                                <label class="form-label fw-semibold">
                                    <i class="bi bi-calendar-check me-1"></i>To Date
                                </label>
                                <input type="date" name="CreatedDateTo" value="@Context.Request.Query["CreatedDateTo"]"
                                       class="form-control">
                            </div>
                            <div class="col-12 col-md-1 d-flex align-items-end">
                                <div class="d-grid gap-2 w-100">
                                    <button type="submit" class="btn btn-primary">
                                        <i class="bi bi-search"></i>
                                    </button>
                                    <a asp-action="Index" class="btn btn-outline-secondary">
                                        <i class="bi bi-arrow-clockwise"></i>
                                    </a>
                                </div>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Results Section -->
    <div class="row">
        <div class="col-12">
            @if (Model.Any())
            {
                <!-- View Toggle -->
                <div class="d-flex justify-content-between align-items-center mb-4">
                    <h4 class="mb-0">
                        <i class="bi bi-archive me-2"></i>Archived Projects
                        <span class="badge bg-primary ms-2">@Model.TotalCount</span>
                    </h4>
                    <div class="btn-group" role="group">
                        <button type="button" class="btn btn-outline-primary" id="gridViewBtn">
                            <i class="bi bi-grid-3x3-gap"></i> Grid
                        </button>
                        <button type="button" class="btn btn-outline-primary active" id="listViewBtn">
                            <i class="bi bi-list-ul"></i> List
                        </button>
                    </div>
                </div>

                <!-- Grid View -->
                <div id="gridView" class="row g-4 d-none">
                    @foreach (var item in Model)
                    {
                        <div class="col-12 col-md-6 col-lg-4">
                            <div class="archive-card">
                                <div class="archive-card-header">
                                    <div class="d-flex justify-content-between align-items-start">
                                        <div class="client-info">
                                            <h6 class="client-name mb-1">@item.ClientName</h6>
                                            <small class="text-muted">@item.ContactPersonNumber</small>
                                        </div>
                                        <span class="project-type-badge @GetProjectTypeClass(item.TypeOfProject)">
                                            @Html.Raw(GetProjectTypeIcon(item.TypeOfProject))
                                        </span>
                                    </div>
                                </div>
                                <div class="archive-card-body">
                                    <div class="project-details">
                                        <div class="detail-item">
                                            <i class="bi bi-briefcase text-primary"></i>
                                            <span>@item.TypeOfProject</span>
                                        </div>
                                        <div class="detail-item">
                                            <i class="bi bi-calendar text-success"></i>
                                            <span>@item.CreatedDate.ToString("MMM dd, yyyy")</span>
                                        </div>
                                        <div class="detail-item">
                                            <i class="bi bi-check-circle text-info"></i>
                                            <span>@item.Status</span>
                                        </div>
                                    </div>
                                </div>
                                <div class="archive-card-footer">
                                    <button type="button" class="btn btn-primary btn-sm w-100"
                                            onclick="viewArchiveDetails('@item.Id')">
                                        <i class="bi bi-eye me-1"></i>View Details
                                    </button>
                                </div>
                            </div>
                        </div>
                    }
                </div>

                <!-- List View -->
                <div id="listView">
                    <div class="list-view-container">
                        <div class="list-header">
                            <div class="row fw-bold text-muted small">
                                <div class="col-md-4">Client Information</div>
                                <div class="col-md-2">Project Type</div>
                                <div class="col-md-2">Archived Date</div>
                                <div class="col-md-2">Status</div>
                                <div class="col-md-2 text-center">Actions</div>
                            </div>
                        </div>
                        <div class="list-body">
                            @foreach (var item in Model)
                            {
                                <div class="list-item">
                                    <div class="row align-items-center">
                                        <div class="col-md-4">
                                            <div class="d-flex align-items-center">
                                                <div class="client-avatar me-3">
                                                    <i class="bi bi-person-circle"></i>
                                                </div>
                                                <div>
                                                    <h6 class="mb-0">@item.ClientName</h6>
                                                    <small class="text-muted">@item.ContactPersonNumber</small>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-md-2">
                                            <span class="project-type-badge @GetProjectTypeClass(item.TypeOfProject)">
                                                @Html.Raw(GetProjectTypeIcon(item.TypeOfProject)) @item.TypeOfProject
                                            </span>
                                        </div>
                                        <div class="col-md-2">
                                            <span class="text-muted">@item.CreatedDate.ToString("MMM dd, yyyy")</span>
                                        </div>
                                        <div class="col-md-2">
                                            <span class="badge bg-success">@item.Status</span>
                                        </div>
                                        <div class="col-md-2 text-center">
                                            <button type="button" class="btn btn-outline-primary btn-sm"
                                                    onclick="viewArchiveDetails('@item.Id')" title="View Details">
                                                <i class="bi bi-eye"></i>
                                            </button>
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                </div>

                <!-- Pagination -->
                <div class="pagination-container">
                    <nav aria-label="Archive pagination">
                        @{
                            var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
                            var nextDisabled = !Model.HasNextPage ? "disabled" : "";
                        }
                        <ul class="pagination justify-content-center">
                            <li class="page-item @prevDisabled">
                                <a asp-action="Index" asp-route-sortOrder="@ViewData["CurrentSort"]"
                                   asp-route-pageNumber="@(Model.PageIndex - 1)"
                                   asp-route-currentFilter="@ViewData["CurrentFilter"]"
                                   class="page-link">
                                    <i class="bi bi-chevron-left"></i> Previous
                                </a>
                            </li>

                            @for (int i = Math.Max(1, Model.PageIndex - 2); i <= Math.Min(Model.TotalPages, Model.PageIndex + 2); i++)
                            {
                                <li class="page-item @(i == Model.PageIndex ? "active" : "")">
                                    <a asp-action="Index" asp-route-sortOrder="@ViewData["CurrentSort"]"
                                       asp-route-pageNumber="@i"
                                       asp-route-currentFilter="@ViewData["CurrentFilter"]"
                                       class="page-link">@i</a>
                                </li>
                            }

                            <li class="page-item @nextDisabled">
                                <a asp-action="Index" asp-route-sortOrder="@ViewData["CurrentSort"]"
                                   asp-route-pageNumber="@(Model.PageIndex + 1)"
                                   asp-route-currentFilter="@ViewData["CurrentFilter"]"
                                   class="page-link">
                                    Next <i class="bi bi-chevron-right"></i>
                                </a>
                            </li>
                        </ul>
                    </nav>
                </div>
            }
            else
            {
                <!-- Empty State -->
                <div class="empty-state">
                    <div class="empty-state-icon">
                        <i class="bi bi-archive"></i>
                    </div>
                    <h4 class="empty-state-title">No Archived Clients Found</h4>
                    <p class="empty-state-description">
                        There are currently no archived clients matching your search criteria.
                    </p>
                    <a asp-action="Index" class="btn btn-primary">
                        <i class="bi bi-arrow-clockwise me-1"></i>Clear Filters
                    </a>
                </div>
            }
        </div>
    </div>
</div>

<!-- Archive Details Modal -->
<div class="modal fade" id="archiveDetailsModal" tabindex="-1" aria-labelledby="archiveDetailsModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-xl modal-dialog-scrollable" style="max-width: 95%;">
        <div class="modal-content border-0 shadow">
            <div class="modal-header bg-light border-0 py-3">
                <h5 class="modal-title mb-0">
                    <i class="bi bi-person-bounding-box"></i> Archived Client Details
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body p-4" id="archiveDetailsContent">
                <div class="text-center py-4">
                    <div class="spinner-border text-primary" role="status">
                        <span class="visually-hidden">Loading...</span>
                    </div>
                    <p class="mt-3 text-muted">Loading client details...</p>
                </div>
            </div>
            <div class="modal-footer bg-light">
                <button type="button" class="btn btn-outline-secondary" data-bs-dismiss="modal">
                    <i class="bi bi-arrow-left"></i> Close
                </button>
            </div>
        </div>
    </div>
</div>

<!-- File Viewer Modal (for requirement files) -->
<div class="modal fade" id="fileViewerModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-xl">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">
                    <i class="bi bi-eye me-2"></i><span id="viewerFileName">File Viewer</span>
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body p-0" style="max-height: 80vh; overflow: auto;">
                <div id="fileViewerContent" class="d-flex align-items-center justify-content-center" style="min-height: 400px;">
                    <div class="text-center">
                        <div class="spinner-border text-primary" role="status">
                            <span class="visually-hidden">Loading...</span>
                        </div>
                        <div class="mt-2 text-muted">Loading file...</div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <a id="downloadFileBtn" href="#" class="btn btn-outline-secondary" download>
                    <i class="bi bi-download me-1"></i>Download
                </a>
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<audio id="notifySound" src="/sounds/Notifications.mp3" preload="auto"></audio>

@section Scripts {
    <script>
        // View Toggle Functionality
        document.addEventListener('DOMContentLoaded', function() {
            const gridViewBtn = document.getElementById('gridViewBtn');
            const listViewBtn = document.getElementById('listViewBtn');
            const gridView = document.getElementById('gridView');
            const listView = document.getElementById('listView');

            gridViewBtn.addEventListener('click', function() {
                gridViewBtn.classList.add('active');
                listViewBtn.classList.remove('active');
                gridView.classList.remove('d-none');
                listView.classList.add('d-none');
            });

            listViewBtn.addEventListener('click', function() {
                listViewBtn.classList.add('active');
                gridViewBtn.classList.remove('active');
                listView.classList.remove('d-none');
                gridView.classList.add('d-none');
            });

            // Animate cards on load (only if grid view is visible)
            const cards = document.querySelectorAll('.archive-card');
            if (cards.length > 0 && !gridView.classList.contains('d-none')) {
                cards.forEach((card, index) => {
                    card.style.opacity = '0';
                    card.style.transform = 'translateY(20px)';
                    setTimeout(() => {
                        card.style.transition = 'all 0.5s ease';
                        card.style.opacity = '1';
                        card.style.transform = 'translateY(0)';
                    }, index * 100);
                });
            }
        });

        // Archive Details Modal Function
        function viewArchiveDetails(clientId) {
            // Show modal
            const modal = new bootstrap.Modal(document.getElementById('archiveDetailsModal'));
            modal.show();

            // Show loading state
            document.getElementById('archiveDetailsContent').innerHTML = `
                <div class="text-center py-4">
                    <div class="spinner-border text-primary" role="status">
                        <span class="visually-hidden">Loading...</span>
                    </div>
                    <p class="mt-3 text-muted">Loading client details...</p>
                </div>
            `;

            // Fetch client details
            fetch(`/Archive/GetClientDetails/${encodeURIComponent(clientId)}`)
                .then(response => {
                    if (!response.ok) throw new Error('Failed to fetch client details');
                    return response.json();
                })
                .then(client => {
                    const content = `
                        <div class="row">
                            <!-- Client Details Column -->
                            <div class="col-lg-6">
                                <div class="card shadow-sm mb-4">
                                    <div class="card-header bg-light d-flex justify-content-between align-items-center">
                                        <h5 class="mb-0">Client: ${client.clientName || 'N/A'}</h5>
                                        <span class="badge bg-secondary">${client.status || 'N/A'}</span>
                                    </div>
                                    <div class="card-body">
                                        <dl class="row">
                                            <dt class="col-sm-4">Client Name</dt>
                                            <dd class="col-sm-8">${client.clientName || 'N/A'}</dd>

                                            <dt class="col-sm-4">Contact Number</dt>
                                            <dd class="col-sm-8">${client.contactPersonNumber || 'N/A'}</dd>

                                            <dt class="col-sm-4">Email Address</dt>
                                            <dd class="col-sm-8">${client.contactPersonEmailAddress || 'N/A'}</dd>

                                            <dt class="col-sm-4">Address</dt>
                                            <dd class="col-sm-8">${client.registeredCompanyAddress || 'N/A'}</dd>

                                            <dt class="col-sm-4">Permit Type</dt>
                                            <dd class="col-sm-8">
                                                <strong>${client.typeOfProject || 'N/A'}</strong>
                                            </dd>

                                            <dt class="col-sm-4">Urgency Level</dt>
                                            <dd class="col-sm-8">${client.urgencyLevel || 'N/A'}</dd>

                                            <dt class="col-sm-4">Date Created</dt>
                                            <dd class="col-sm-8">${client.createdDate || 'N/A'}</dd>
                                        </dl>

                                        <div class="card shadow-sm mb-4">
                                            <div class="card-header bg-light">
                                                <h5 class="mb-0">Optional Information</h5>
                                            </div>
                                            <div class="card-body">
                                                <dl class="row">
                                                    <dt class="col-sm-4">Tax ID</dt>
                                                    <dd class="col-sm-8">${client.taxId || 'N/A'}</dd>
                                                </dl>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                ${getProjectSpecificDetails(client)}
                            </div>

                            <!-- Requirements Column -->
                            <div class="col-lg-6">
                                ${getRequirementsDetails(client.requirements)}
                            </div>
                        </div>
                    `;

                    document.getElementById('archiveDetailsContent').innerHTML = content;
                })
                .catch(error => {
                    console.error('Error fetching archive details:', error);
                    document.getElementById('archiveDetailsContent').innerHTML = `
                        <div class="alert alert-danger">
                            <i class="bi bi-exclamation-triangle me-2"></i>
                            Error loading client details. Please try again.
                        </div>
                    `;
                });
        }

        // Helpers used by modal content
        function getUrgencyBadgeClass(level) {
            switch (level) {
                case 'Urgent': return 'bg-danger';
                case 'Slightly Urgent': return 'bg-warning';
                case 'High': return 'bg-danger';
                case 'Normal': return 'bg-warning';
                case 'Low': return 'bg-success';
                default: return 'bg-secondary';
            }
        }
        function getStatusBadgeClass(status) {
            switch (status) {
                case 'Active': return 'bg-success';
                case 'Pending': return 'bg-warning';
                case 'In Progress': return 'bg-info';
                case 'Planning': return 'bg-info';
                case 'Finance': return 'bg-primary';
                default: return 'bg-secondary';
            }
        }

        function getProjectSpecificDetails(client) {
            let details = '';
            
            // Check if any project-specific details exist
            if (!client.retainershipBIR && !client.retainershipSPP && !client.oneTimeTransaction && !client.externalAudit) {
                return '';
            }
            
            details += '<div class="card shadow mb-4"><div class="card-header bg-light"><h5 class="mb-0 fw-semibold"><i class="bi bi-file-earmark-text"></i> Project Type Details</h5></div><div class="card-body">';
            details += '<div class="accordion" id="projectTypeAccordion">';
            
            if (client.typeOfProject === "Retainership - SPP" && client.retainershipSPP) {
                details += `
                    <div class="accordion-item">
                        <h2 class="accordion-header" id="headingSPP">
                            <button class="accordion-button collapsed bg-info text-white fw-bold" type="button" data-bs-toggle="collapse" data-bs-target="#collapseSPP" aria-expanded="false" aria-controls="collapseSPP">
                                <i class="bi bi-file-earmark-text"></i> Retainership - SPP Details
                            </button>
                        </h2>
                        <div id="collapseSPP" class="accordion-collapse collapse show" aria-labelledby="headingSPP" data-bs-parent="#projectTypeAccordion">
                            <div class="accordion-body row g-3">
                                <div class="col-md-6"><b>SSS Company Registration No.:</b> ${client.retainershipSPP.sssCompanyRegNo || 'N/A'}</div>
                                <div class="col-md-6"><b>Date of SSS Registration:</b> ${client.retainershipSPP.sssRegistrationDate || 'N/A'}</div>
                                <div class="col-md-6"><b>PHIC Company Registration No.:</b> ${client.retainershipSPP.phicCompanyRegNo || 'N/A'}</div>
                                <div class="col-md-6"><b>Date of PHIC Registration:</b> ${client.retainershipSPP.phicRegistrationDate || 'N/A'}</div>
                                <div class="col-md-6"><b>HDMF Company Registration No.:</b> ${client.retainershipSPP.hdmfCompanyRegNo || 'N/A'}</div>
                                <div class="col-md-6"><b>Date of HDMF Registration:</b> ${client.retainershipSPP.hdmfRegistrationDate || 'N/A'}</div>
                                <div class="col-md-6"><b>Maintenance of SPP Compliance:</b> ${client.retainershipSPP.sppComplianceActivities || 'N/A'}</div>
                                <div class="col-md-6"><b>Other SPP Compliance:</b> ${client.retainershipSPP.otherSPPCompliance || 'N/A'}</div>
                                <div class="col-md-12"><b>Target Date to Start Subscription - SPP Retainership:</b> ${client.retainershipSPP.sppRetainershipStartDate || 'N/A'}</div>
                            </div>
                        </div>
                    </div>`;
            } else if (client.typeOfProject === "Retainership - BIR" && client.retainershipBIR) {
                details += `
                    <div class="accordion-item">
                        <h2 class="accordion-header" id="headingBIR">
                            <button class="accordion-button collapsed bg-primary text-white fw-bold" type="button" data-bs-toggle="collapse" data-bs-target="#collapseBIR" aria-expanded="false" aria-controls="collapseBIR">
                                <i class="bi bi-file-earmark-text"></i> Retainership - BIR Details
                            </button>
                        </h2>
                        <div id="collapseBIR" class="accordion-collapse collapse show" aria-labelledby="headingBIR" data-bs-parent="#projectTypeAccordion">
                            <div class="accordion-body row g-3">
                                <div class="col-md-6"><b>Type of Registrant:</b> ${client.retainershipBIR.typeOfRegistrant || 'N/A'}</div>
                                <div class="col-md-6"><b>OCN Number Notes:</b> ${client.retainershipBIR.ocnNotes || 'N/A'}</div>
                                <div class="col-md-6"><b>Date OCN Generated:</b> ${client.retainershipBIR.dateOCNGenerated || 'N/A'}</div>
                                <div class="col-md-6"><b>Date of BIR Registration:</b> ${client.retainershipBIR.dateBIRRegistration || 'N/A'}</div>
                                <div class="col-md-6"><b>BIR RDO No.:</b> ${client.retainershipBIR.birRdoNo || 'N/A'}</div>
                                <div class="col-md-6"><b>Other BIR RDO No.:</b> ${client.retainershipBIR.otherBirRdoNo || 'N/A'}</div>
                                <div class="col-md-6"><b>Status of Tax Filing:</b> ${client.retainershipBIR.taxFilingStatus || 'N/A'}</div>
                                <div class="col-md-6"><b>Catch-Up Accounting Needed?:</b> ${client.retainershipBIR.needCatchUpAccounting || 'N/A'}</div>
                                <div class="col-md-6"><b>Catch-Up Reasons:</b> ${client.retainershipBIR.catchUpReasons || 'N/A'}</div>
                                <div class="col-md-6"><b>Other Catch-Up Reason:</b> ${client.retainershipBIR.otherCatchUpReason || 'N/A'}</div>
                                <div class="col-md-6"><b>Target Date to Start Catch-Up Accounting:</b> ${client.retainershipBIR.catchUpStartDate || 'N/A'}</div>
                                <div class="col-md-6"><b>BIR Compliance Activities:</b> ${client.retainershipBIR.birComplianceActivities || 'N/A'}</div>
                                <div class="col-md-6"><b>Other BIR Compliance:</b> ${client.retainershipBIR.otherBIRCompliance || 'N/A'}</div>
                                <div class="col-md-12"><b>Target Date to Start Subscription - BIR Retainership:</b> ${client.retainershipBIR.birRetainershipStartDate || 'N/A'}</div>
                            </div>
                        </div>
                    </div>`;
            } else if (client.typeOfProject === "One Time Transaction" && client.oneTimeTransaction) {
                details += `
                    <div class="accordion-item">
                        <h2 class="accordion-header" id="headingOneTime">
                            <button class="accordion-button collapsed bg-warning text-dark fw-bold" type="button" data-bs-toggle="collapse" data-bs-target="#collapseOneTime" aria-expanded="false" aria-controls="collapseOneTime">
                                <i class="bi bi-file-earmark-text"></i> One Time Transaction Details
                            </button>
                        </h2>
                        <div id="collapseOneTime" class="accordion-collapse collapse show" aria-labelledby="headingOneTime" data-bs-parent="#projectTypeAccordion">
                            <div class="accordion-body row g-3">
                                <div class="col-md-6"><b>Type of Registrant:</b> ${client.oneTimeTransaction.typeOfRegistrant || 'N/A'}</div>
                                <div class="col-md-6"><b>Area of Services:</b> ${client.oneTimeTransaction.areaOfServices || 'N/A'}</div>
                                <div class="col-md-6"><b>Other Area of Services:</b> ${client.oneTimeTransaction.otherAreaOfServices || 'N/A'}</div>
                            </div>
                        </div>
                    </div>`;
            } else if (client.typeOfProject === "External Audit" && client.externalAudit) {
                details += `
                    <div class="accordion-item">
                        <h2 class="accordion-header" id="headingAudit">
                            <button class="accordion-button collapsed bg-secondary text-white fw-bold" type="button" data-bs-toggle="collapse" data-bs-target="#collapseAudit" aria-expanded="false" aria-controls="collapseAudit">
                                <i class="bi bi-file-earmark-text"></i> External Audit Details
                            </button>
                        </h2>
                        <div id="collapseAudit" class="accordion-collapse collapse show" aria-labelledby="headingAudit" data-bs-parent="#projectTypeAccordion">
                            <div class="accordion-body row g-3">
                                <div class="col-md-6"><b>Status of External Audit Client:</b> ${client.externalAudit.externalAuditStatus || 'N/A'}</div>
                                <div class="col-md-6"><b>External Audit - Purposes of Client:</b> ${client.externalAudit.externalAuditPurposes || 'N/A'}</div>
                                <div class="col-md-6"><b>Other Purpose:</b> ${client.externalAudit.externalAuditOtherPurpose || 'N/A'}</div>
                                <div class="col-md-6"><b>Target Date of Issuance of Report:</b> ${client.externalAudit.externalAuditReportDate || 'N/A'}</div>
                            </div>
                        </div>
                    </div>`;
            }
            
            details += '</div></div></div>';
            return details;
        }

        function getRequirementsDetails(requirements) {
            if (!requirements || requirements.length === 0) {
                return '<div class="card shadow-sm mb-4"><div class="card-header bg-light"><h5 class="mb-0">Permit Requirements History</h5></div><div class="card-body"><p class="text-muted">No requirements were recorded for this client.</p></div></div>';
            }

            let details = '<div class="card shadow-sm mb-4"><div class="card-header bg-light"><h5 class="mb-0">Permit Requirements History</h5></div><div class="card-body">';
            details += '<div class="accordion" id="requirementsAccordion">';

            requirements.forEach(req => {
                const reqId = req.id;
                const photos = req.photos || [];
                
                details += `
                    <div class="accordion-item border-0 mb-3">
                        <h2 class="accordion-header" id="heading-${reqId}">
                            <button class="accordion-button collapsed bg-white border rounded-3 shadow-sm" type="button" data-bs-toggle="collapse" data-bs-target="#collapse-${reqId}" aria-expanded="false" aria-controls="collapse-${reqId}">
                                <div class="d-flex justify-content-between align-items-center w-100 me-3">
                                    <span class="fw-bold"><i class="bi bi-file-text text-primary me-2"></i> ${req.requirementName}</span>
                                    <div>
                                        ${req.isCompleted ? '<span class="badge bg-success me-2">Completed</span>' : '<span class="badge bg-warning me-2">Pending</span>'}
                                        ${photos.length > 0 ? `<span class="badge bg-info">${photos.length} file(s)</span>` : ''}
                                    </div>
                                </div>
                            </button>
                        </h2>
                        <div id="collapse-${reqId}" class="accordion-collapse collapse" aria-labelledby="heading-${reqId}" data-bs-parent="#requirementsAccordion">
                            <div class="accordion-body bg-white border rounded-3 mt-2 shadow-sm">
                                <div class="mb-3">
                                    <p class="mb-2"><strong>Description:</strong> ${req.description || 'N/A'}</p>
                                    <small class="text-muted">Date Created: ${req.createdDate}</small>
                                </div>`;
                
                if (photos.length > 0) {
                    details += '<hr class="my-3" /><h6 class="mb-3"><i class="bi bi-paperclip text-primary me-2"></i> Archived Files:</h6><div class="row g-3">';
                    
                    photos.forEach(photo => {
                        const fileName = photo.photoPath ? photo.photoPath.split('/').pop() : 'Unknown File';
                        const extension = fileName.split('.').pop().toLowerCase();
                        let iconClass = 'bi-file-earmark text-secondary';
                        
                        if (['.pdf'].includes(`.${extension}`)) iconClass = 'bi-file-earmark-pdf text-danger';
                        else if (['.doc', '.docx'].includes(`.${extension}`)) iconClass = 'bi-file-earmark-word text-primary';
                        else if (['.xls', '.xlsx'].includes(`.${extension}`)) iconClass = 'bi-file-earmark-excel text-success';
                        else if (['.jpg', '.jpeg', '.png', '.gif'].includes(`.${extension}`)) iconClass = 'bi-file-earmark-image text-info';
                        
                        details += `
                            <div class="col-md-6 col-lg-4">
                                <div class="card border h-100">
                                    <div class="card-body p-3">
                                        <div class="d-flex align-items-center mb-3">
                                            <i class="bi ${iconClass} fs-2 me-3"></i>
                                            <div class="flex-grow-1" style="min-width: 0;">
                                                <div class="fw-bold text-truncate" title="${fileName}" style="max-width: 100%; overflow: hidden; text-overflow: ellipsis; white-space: nowrap;">${fileName}</div>
                                                <small class="text-muted">.${extension.toUpperCase()} File</small>
                                            </div>
                                        </div>
                                        <div class="d-flex gap-1 flex-wrap">
                                            <button type="button" class="btn btn-sm btn-outline-primary view-file-btn" 
                                                    data-photo-id="${photo.id}" 
                                                    data-file-name="${fileName}"
                                                    data-file-url="/Archive/ViewRequirementFile/${photo.id}"
                                                    data-file-type=".${extension}"
                                                    onclick="viewRequirementFile(this)">
                                                <i class="bi bi-eye me-1"></i> View
                                            </button>
                                            <a href="/Archive/ViewRequirementFile/${photo.id}" 
                                               class="btn btn-sm btn-outline-secondary" 
                                               download="${fileName}">
                                                <i class="bi bi-download me-1"></i> Download
                                            </a>
                                        </div>
                                    </div>
                                </div>
                            </div>`;
                    });
                    
                    details += '</div>';
                } else {
                    details += '<div class="alert alert-info border-0 bg-info bg-opacity-10"><i class="bi bi-info-circle text-info me-2"></i> No files were archived for this requirement.</div>';
                }
                
                details += '</div></div></div>';
            });

            details += '</div></div></div>';
            return details;
        }
        
        // Function to handle viewing requirement files
        function viewRequirementFile(button) {
            const fileName = button.getAttribute('data-file-name');
            const fileUrl = button.getAttribute('data-file-url');
            const fileType = button.getAttribute('data-file-type').toLowerCase();
            
            // Set modal title and download link
            document.getElementById('viewerFileName').textContent = fileName;
            document.getElementById('downloadFileBtn').href = fileUrl;
            document.getElementById('downloadFileBtn').download = fileName;
            
            // Show modal
            const viewerModal = new bootstrap.Modal(document.getElementById('fileViewerModal'));
            viewerModal.show();
            
            // Load file content based on type
            const contentDiv = document.getElementById('fileViewerContent');
            contentDiv.innerHTML = '<div class="text-center"><div class="spinner-border text-primary" role="status"><span class="visually-hidden">Loading...</span></div><div class="mt-2 text-muted">Loading file...</div></div>';
            
            if (['.jpg', '.jpeg', '.png', '.gif', '.bmp', '.webp'].includes(fileType)) {
                // Image file
                contentDiv.innerHTML = `<img src="${fileUrl}" class="img-fluid" style="max-width: 100%; max-height: 70vh;" alt="${fileName}" />`;
            } else if (fileType === '.pdf') {
                // PDF file
                contentDiv.innerHTML = `<iframe src="${fileUrl}" style="width: 100%; height: 70vh; border: none;"></iframe>`;
            } else {
                // Other file types - show info and download option
                contentDiv.innerHTML = `
                    <div class="text-center p-5">
                        <i class="bi bi-file-earmark fs-1 text-muted mb-3"></i>
                        <h5>${fileName}</h5>
                        <p class="text-muted">This file type cannot be previewed directly.</p>
                        <a href="${fileUrl}" class="btn btn-primary" target="_blank">
                            <i class="bi bi-download me-1"></i>Download to View
                        </a>
                    </div>
                `;
            }
        }
    </script>
}