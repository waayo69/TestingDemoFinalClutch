@model IEnumerable<TestingDemo.Models.ExpenseModel>
@{
    ViewData["Title"] = "Expense Calendar";
    var statusColors = new Dictionary<string, string> {
        {"Paid", "success"},
        {"Pending", "warning"},
        {"Overdue", "danger"},
        {"Postponed", "secondary"}
    };
    
    int safeYear = (ViewBag.Year != null && (int)ViewBag.Year > 0) ? (int)ViewBag.Year : DateTime.Now.Year;
    int safeMonth = (ViewBag.Month != null && (int)ViewBag.Month > 0 && (int)ViewBag.Month <= 12) ? (int)ViewBag.Month : DateTime.Now.Month;
    var firstDayOfMonth = new DateTime(safeYear, safeMonth, 1);
    var lastDayOfMonth = firstDayOfMonth.AddMonths(1).AddDays(-1);
    var firstDayOfWeek = (int)firstDayOfMonth.DayOfWeek;
    var daysInMonth = DateTime.DaysInMonth(safeYear, safeMonth);
    
    var expensesByDate = Model?.GroupBy(e => e.DueDate.Date).ToDictionary(g => g.Key, g => g.ToList()) ?? new Dictionary<DateTime, List<TestingDemo.Models.ExpenseModel>>();
}

<div class="container-fluid py-4">
    <!-- Header Section -->
    <div class="row mb-4">
        <div class="col-12">
            <div class="d-flex flex-column flex-md-row justify-content-between align-items-start align-items-md-center gap-3">
                <div>
                    <h1 class="h2 mb-0"><i class="bi bi-calendar-event"></i> Expense Calendar</h1>
                    <p class="text-muted mb-0">View your expenses in a calendar format</p>
                </div>
                <div class="d-flex flex-column flex-sm-row gap-2">
                    <a asp-action="Index" class="btn btn-outline-secondary">
                        <i class="bi bi-list"></i> 
                        <span class="d-none d-sm-inline">List View</span>
                        <span class="d-inline d-sm-none">List</span>
                    </a>
                    <a asp-action="Create" class="btn btn-primary">
                        <i class="bi bi-plus-circle"></i> 
                        <span class="d-none d-sm-inline">Add Expense</span>
                        <span class="d-inline d-sm-none">Add</span>
                    </a>
                </div>
            </div>
        </div>
    </div>

    <!-- Month Navigation -->
    <div class="row mb-4">
        <div class="col-12">
            <div class="card shadow-sm">
                <div class="card-body">
                    <div class="row align-items-center">
                        <div class="col-12 col-md-6 mb-3 mb-md-0">
                            <div class="btn-group w-100" role="group">
                                <a asp-action="Calendar" asp-route-year="@(safeYear)" asp-route-month="@(safeMonth - 1)" 
                                   class="btn btn-outline-secondary">
                                    <i class="bi bi-chevron-left"></i> 
                                    <span class="d-none d-sm-inline">Previous</span>
                                </a>
                                <button type="button" class="btn btn-outline-secondary disabled flex-grow-1">
                                    <i class="bi bi-calendar3"></i> @firstDayOfMonth.ToString("MMMM yyyy")
                                </button>
                                <a asp-action="Calendar" asp-route-year="@(safeYear)" asp-route-month="@(safeMonth + 1)" 
                                   class="btn btn-outline-secondary">
                                    <span class="d-none d-sm-inline">Next</span> 
                                    <i class="bi bi-chevron-right"></i>
                                </a>
                            </div>
                        </div>
                        <div class="col-12 col-md-6 text-center text-md-end">
                            <a asp-action="Calendar" asp-route-year="@DateTime.Now.Year" asp-route-month="@DateTime.Now.Month" 
                               class="btn btn-outline-info">
                                <i class="bi bi-calendar-today"></i> 
                                <span class="d-none d-sm-inline">Today</span>
                                <span class="d-inline d-sm-none">Now</span>
                            </a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Statistics Cards -->
    <div class="row mb-4">
        <div class="col-6 col-md-3 mb-3">
            <div class="card bg-primary text-white h-100">
                <div class="card-body text-center">
                    <i class="bi bi-calendar-check fs-1"></i>
                    <h6 class="card-title mt-2">This Month</h6>
                    <h4 class="mb-0">@Model?.Count(e => e.DueDate.Month == safeMonth && e.DueDate.Year == safeYear) ?? 0</h4>
                </div>
            </div>
        </div>
        <div class="col-6 col-md-3 mb-3">
            <div class="card bg-warning text-dark h-100">
                <div class="card-body text-center">
                    <i class="bi bi-clock fs-1"></i>
                    <h6 class="card-title mt-2">Pending</h6>
                    <h4 class="mb-0">@Model?.Count(e => e.DueDate.Month == safeMonth && e.DueDate.Year == safeYear && e.Status == "Pending") ?? 0</h4>
                </div>
            </div>
        </div>
        <div class="col-6 col-md-3 mb-3">
            <div class="card bg-success text-white h-100">
                <div class="card-body text-center">
                    <i class="bi bi-check-circle fs-1"></i>
                    <h6 class="card-title mt-2">Paid</h6>
                    <h4 class="mb-0">@Model?.Count(e => e.DueDate.Month == safeMonth && e.DueDate.Year == safeYear && e.Status == "Paid") ?? 0</h4>
                </div>
            </div>
        </div>
        <div class="col-6 col-md-3 mb-3">
            <div class="card bg-danger text-white h-100">
                <div class="card-body text-center">
                    <i class="bi bi-exclamation-triangle fs-1"></i>
                    <h6 class="card-title mt-2">Overdue</h6>
                    <h4 class="mb-0">@Model?.Count(e => e.DueDate.Month == safeMonth && e.DueDate.Year == safeYear && e.Status == "Overdue") ?? 0</h4>
                </div>
            </div>
        </div>
    </div>

    <!-- Calendar Grid -->
    <div class="row">
        <div class="col-12">
            <div class="card shadow-sm">
                <div class="card-body p-0">
                    <!-- Desktop Calendar -->
                    <div class="d-none d-lg-block">
                        <div class="table-responsive">
                            <table class="table table-bordered mb-0 calendar-table">
                                <thead class="table-dark">
                                    <tr>
                                        <th class="text-center calendar-header">Sunday</th>
                                        <th class="text-center calendar-header">Monday</th>
                                        <th class="text-center calendar-header">Tuesday</th>
                                        <th class="text-center calendar-header">Wednesday</th>
                                        <th class="text-center calendar-header">Thursday</th>
                                        <th class="text-center calendar-header">Friday</th>
                                        <th class="text-center calendar-header">Saturday</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @{
                                        var currentDay = 1;
                                        var totalWeeks = (int)Math.Ceiling((firstDayOfWeek + daysInMonth) / 7.0);
                                        
                                        for (int week = 0; week < totalWeeks; week++)
                                        {
                                            <tr class="calendar-row">
                                                @for (int dayOfWeek = 0; dayOfWeek < 7; dayOfWeek++)
                                                {
                                                    var isCurrentMonth = (week == 0 && dayOfWeek >= firstDayOfWeek) || 
                                                                       (week > 0 && currentDay <= daysInMonth);
                                                    var currentDate = isCurrentMonth ? new DateTime(safeYear, safeMonth, currentDay) : DateTime.MinValue;
                                                    var hasExpenses = isCurrentMonth && expensesByDate.ContainsKey(currentDate);
                                                    var isToday = currentDate == DateTime.Today;
                                                    
                                                    <td class="calendar-cell @(isCurrentMonth ? "" : "bg-light")" 
                                                        style="height: 140px; vertical-align: top;">
                                                        @if (isCurrentMonth)
                                                        {
                                                            <div class="d-flex justify-content-between align-items-start p-2">
                                                                <span class="badge @(isToday ? "bg-primary" : "bg-secondary") rounded-pill">
                                                                    @currentDay
                                                                </span>
                                                                @if (hasExpenses)
                                                                {
                                                                    <span class="badge bg-danger rounded-pill">
                                                                        @expensesByDate[currentDate].Count
                                                                    </span>
                                                                }
                                                            </div>
                                                            
                                                            @if (hasExpenses)
                                                            {
                                                                <div class="px-2">
                                                                    @foreach (var expense in expensesByDate[currentDate].Take(4))
                                                                    {
                                                                        <div class="mb-1">
                                                                            <small class="d-block text-truncate expense-item" 
                                                                                   style="max-width: 120px;"
                                                                                   title="@expense.Name - ₱@expense.Amount.ToString("N2")">
                                                                                <span class="badge bg-@statusColors.GetValueOrDefault(expense.Status, "secondary") me-1">
                                                                                    @expense.Status
                                                                                </span>
                                                                                @expense.Name
                                                                            </small>
                                                                        </div>
                                                                    }
                                                                    @if (expensesByDate[currentDate].Count > 4)
                                                                    {
                                                                        <small class="text-muted">
                                                                            +@(expensesByDate[currentDate].Count - 4) more
                                                                        </small>
                                                                    }
                                                                </div>
                                                            }
                                                            
                                                            currentDay++;
                                                        }
                                                    </td>
                                                }
                                            </tr>
                                        }
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>

                    <!-- Mobile Calendar -->
                    <div class="d-lg-none">
                        <div class="p-3">
                            <div class="row">
                                @{
                                    currentDay = 1;
                                    for (int week = 0; week < totalWeeks; week++)
                                    {
                                        for (int dayOfWeek = 0; dayOfWeek < 7; dayOfWeek++)
                                        {
                                            var isCurrentMonth = (week == 0 && dayOfWeek >= firstDayOfWeek) || 
                                                               (week > 0 && currentDay <= daysInMonth);
                                            var currentDate = isCurrentMonth ? new DateTime(safeYear, safeMonth, currentDay) : DateTime.MinValue;
                                            var hasExpenses = isCurrentMonth && expensesByDate.ContainsKey(currentDate);
                                            var isToday = currentDate == DateTime.Today;
                                            
                                            if (isCurrentMonth)
                                            {
                                                <div class="col-6 col-sm-4 col-md-3 mb-3">
                                                    <div class="card calendar-mobile-card @(isToday ? "border-primary" : "") h-100">
                                                        <div class="card-body p-2 text-center">
                                                            <div class="d-flex justify-content-between align-items-center mb-2">
                                                                <span class="badge @(isToday ? "bg-primary" : "bg-secondary") rounded-pill">
                                                                    @currentDay
                                                                </span>
                                                                @if (hasExpenses)
                                                                {
                                                                    <span class="badge bg-danger rounded-pill">
                                                                        @expensesByDate[currentDate].Count
                                                                    </span>
                                                                }
                                                            </div>
                                                            
                                                            @if (hasExpenses)
                                                            {
                                                                <div class="text-start">
                                                                    @foreach (var expense in expensesByDate[currentDate].Take(2))
                                                                    {
                                                                        <div class="mb-1">
                                                                            <small class="d-block text-truncate" 
                                                                                   style="max-width: 100px;"
                                                                                   title="@expense.Name">
                                                                                <span class="badge bg-@statusColors.GetValueOrDefault(expense.Status, "secondary") me-1">
                                                                                    @expense.Status
                                                                                </span>
                                                                                @expense.Name
                                                                            </small>
                                                                        </div>
                                                                    }
                                                                    @if (expensesByDate[currentDate].Count > 2)
                                                                    {
                                                                        <small class="text-muted">
                                                                            +@(expensesByDate[currentDate].Count - 2) more
                                                                        </small>
                                                                    }
                                                                </div>
                                                            }
                                                        </div>
                                                    </div>
                                                </div>
                                                currentDay++;
                                            }
                                        }
                                    }
                                }
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Legend -->
    <div class="row mt-4">
        <div class="col-12">
            <div class="card">
                <div class="card-body">
                    <h6 class="card-title">Legend:</h6>
                    <div class="d-flex flex-wrap gap-2">
                        <span class="badge bg-success">Paid</span>
                        <span class="badge bg-warning">Pending</span>
                        <span class="badge bg-danger">Overdue</span>
                        <span class="badge bg-secondary">Postponed</span>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<style>
    .calendar-table {
        border-collapse: separate;
        border-spacing: 0;
    }
    
    .calendar-header {
        font-weight: 600;
        padding: 12px 8px;
        border: 1px solid #dee2e6;
    }
    
    .calendar-cell {
        border: 1px solid #dee2e6;
        transition: background-color 0.2s ease;
    }
    
    .calendar-cell:hover {
        background-color: #f8f9fa;
    }
    
    .expense-item {
        font-size: 0.75rem;
        line-height: 1.2;
    }
    
    .calendar-mobile-card {
        transition: transform 0.2s ease-in-out, box-shadow 0.2s ease-in-out;
    }
    
    .calendar-mobile-card:hover {
        transform: translateY(-2px);
        box-shadow: 0 4px 8px rgba(0,0,0,0.1);
    }
    
    .badge {
        font-size: 0.7rem;
    }
    
    @@media (max-width: 768px) {
        .container-fluid {
            padding-left: 10px;
            padding-right: 10px;
        }
        
        .calendar-mobile-card {
            min-height: 100px;
        }
    }
    
    @@media (max-width: 576px) {
        .btn-group .btn {
            font-size: 0.875rem;
            padding: 0.375rem 0.5rem;
        }
    }
</style> 